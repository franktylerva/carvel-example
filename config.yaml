apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: kafka
spec: {}
status: {}
---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: atlas-infrastructure
spec: {}
status: {}
---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: atlas-observation-crud-service
spec: {}
status: {}
---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: keycloak
spec: {}
status: {}
---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: atlas-orbital-crud-service
spec: {}
status: {}
---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: atlas-sensor-crud-service
spec: {}
status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keycloak
  namespace: keycloak
  labels:
    app.kubernetes.io/name: keycloak
    helm.sh/chart: keycloak-7.1.16
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: keycloak
  annotations:
    kapp.k14s.io/change-group: keycloak
    kapp.k14s.io/change-rule: upsert after upserting keycloak-postgresql
automountServiceAccountToken: true
---
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-postgresql
  namespace: keycloak
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-11.1.21
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
  annotations:
    kapp.k14s.io/change-group: keycloak-postgresql
type: Opaque
data:
  postgres-password: cHFNQUlmUXRtSw==
  password: YzhSb3Byemp6QQ==
---
apiVersion: v1
kind: Secret
metadata:
  name: keycloak
  namespace: keycloak
  labels:
    app.kubernetes.io/name: keycloak
    helm.sh/chart: keycloak-7.1.16
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: keycloak
  annotations:
    kapp.k14s.io/change-group: keycloak
    kapp.k14s.io/change-rule: upsert after upserting keycloak-postgresql
type: Opaque
data:
  admin-password: YWRtaW4=
  management-password: cXRHZGU1Y3Y3RA==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-env-vars
  namespace: keycloak
  labels:
    app.kubernetes.io/name: keycloak
    helm.sh/chart: keycloak-7.1.16
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: keycloak
  annotations:
    kapp.k14s.io/change-group: keycloak
    kapp.k14s.io/change-rule: upsert after upserting keycloak-postgresql
data:
  KEYCLOAK_CREATE_ADMIN_USER: "true"
  KEYCLOAK_ADMIN_USER: admin
  KEYCLOAK_MANAGEMENT_USER: manager
  KEYCLOAK_HTTP_PORT: "8080"
  KEYCLOAK_PROXY_ADDRESS_FORWARDING: "false"
  KEYCLOAK_ENABLE_STATISTICS: "false"
  KEYCLOAK_DATABASE_HOST: keycloak-postgresql
  KEYCLOAK_DATABASE_PORT: "5432"
  KEYCLOAK_DATABASE_NAME: bitnami_keycloak
  KEYCLOAK_DATABASE_USER: bn_keycloak
  KEYCLOAK_CACHE_OWNERS_COUNT: "1"
  KEYCLOAK_AUTH_CACHE_OWNERS_COUNT: "1"
  KEYCLOAK_ENABLE_TLS: "false"
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-postgresql-hl
  namespace: keycloak
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-11.1.21
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
    kapp.k14s.io/change-group: keycloak-postgresql
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
  - name: tcp-postgresql
    port: 5432
    targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/component: primary
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-postgresql
  namespace: keycloak
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-11.1.21
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
    kapp.k14s.io/change-group: keycloak-postgresql
spec:
  type: ClusterIP
  ports:
  - name: tcp-postgresql
    port: 5432
    targetPort: tcp-postgresql
    nodePort: null
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/component: primary
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-headless
  namespace: keycloak
  labels:
    app.kubernetes.io/name: keycloak
    helm.sh/chart: keycloak-7.1.16
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: keycloak
  annotations:
    kapp.k14s.io/change-group: keycloak
    kapp.k14s.io/change-rule: upsert after upserting keycloak-postgresql
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/component: keycloak
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  namespace: keycloak
  labels:
    app.kubernetes.io/name: keycloak
    helm.sh/chart: keycloak-7.1.16
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: keycloak
  annotations:
    kapp.k14s.io/change-group: keycloak
    kapp.k14s.io/change-rule: upsert after upserting keycloak-postgresql
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
    nodePort: null
  - name: https
    port: 443
    protocol: TCP
    targetPort: https
    nodePort: null
  selector:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/component: keycloak
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloak-postgresql
  namespace: keycloak
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-11.1.21
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations:
    kapp.k14s.io/change-group: keycloak-postgresql
spec:
  replicas: 1
  serviceName: keycloak-postgresql-hl
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/component: primary
  template:
    metadata:
      name: keycloak-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-11.1.21
        app.kubernetes.io/instance: keycloak
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: primary
      annotations: null
    spec:
      serviceAccountName: default
      affinity:
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: postgresql
                  app.kubernetes.io/instance: keycloak
                  app.kubernetes.io/component: primary
              namespaces:
              - keycloak
              topologyKey: kubernetes.io/hostname
            weight: 1
        nodeAffinity: null
      securityContext:
        fsGroup: 1001
      hostNetwork: false
      hostIPC: false
      initContainers: null
      containers:
      - name: postgresql
        image: docker.io/bitnami/postgresql:14.2.0-debian-10-r69
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 1001
        env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: POSTGRESQL_PORT_NUMBER
          value: "5432"
        - name: POSTGRESQL_VOLUME_DIR
          value: /bitnami/postgresql
        - name: PGDATA
          value: /bitnami/postgresql/data
        - name: POSTGRES_USER
          value: bn_keycloak
        - name: POSTGRES_POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-postgresql
              key: postgres-password
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-postgresql
              key: password
        - name: POSTGRES_DB
          value: bitnami_keycloak
        - name: POSTGRESQL_ENABLE_LDAP
          value: "no"
        - name: POSTGRESQL_ENABLE_TLS
          value: "no"
        - name: POSTGRESQL_LOG_HOSTNAME
          value: "false"
        - name: POSTGRESQL_LOG_CONNECTIONS
          value: "false"
        - name: POSTGRESQL_LOG_DISCONNECTIONS
          value: "false"
        - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
          value: "off"
        - name: POSTGRESQL_CLIENT_MIN_MESSAGES
          value: error
        - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
          value: pgaudit
        ports:
        - name: tcp-postgresql
          containerPort: 5432
        livenessProbe:
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U "bn_keycloak" -d "dbname=bitnami_keycloak" -h 127.0.0.1 -p 5432
        readinessProbe:
          failureThreshold: 6
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
          exec:
            command:
            - /bin/sh
            - -c
            - -e
            - |
              exec pg_isready -U "bn_keycloak" -d "dbname=bitnami_keycloak" -h 127.0.0.1 -p 5432
              [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
        resources:
          limits: {}
          requests:
            cpu: 250m
            memory: 256Mi
        volumeMounts:
        - name: dshm
          mountPath: /dev/shm
        - name: data
          mountPath: /bitnami/postgresql
      volumes:
      - name: dshm
        emptyDir:
          medium: Memory
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloak
  namespace: keycloak
  labels:
    app.kubernetes.io/name: keycloak
    helm.sh/chart: keycloak-7.1.16
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: keycloak
  annotations:
    kapp.k14s.io/change-group: keycloak
    kapp.k14s.io/change-rule: upsert after upserting keycloak-postgresql
spec:
  replicas: 1
  podManagementPolicy: Parallel
  serviceName: keycloak-headless
  updateStrategy:
    rollingUpdate: {}
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: keycloak
      app.kubernetes.io/instance: keycloak
      app.kubernetes.io/component: keycloak
  template:
    metadata:
      annotations:
        checksum/configmap-env-vars: 64d23edc6eb8d22cdd46d9a897c4bdab543bc656c1e715031ef3fb26fe52770e
        checksum/secrets: 8fe836ee281954c913cc82df9ebeea46d7bf060ca25721b1d41ef9a7f34c0270
      labels:
        app.kubernetes.io/name: keycloak
        helm.sh/chart: keycloak-7.1.16
        app.kubernetes.io/instance: keycloak
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: keycloak
    spec:
      serviceAccountName: keycloak
      affinity:
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: keycloak
                  app.kubernetes.io/instance: keycloak
              namespaces:
              - keycloak
              topologyKey: kubernetes.io/hostname
            weight: 1
        nodeAffinity: null
      securityContext:
        fsGroup: 1001
      containers:
      - name: keycloak
        image: docker.io/bitnami/keycloak:16.1.1-debian-10-r83
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: BITNAMI_DEBUG
          value: "false"
        - name: KEYCLOAK_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak
              key: admin-password
        - name: KEYCLOAK_MANAGEMENT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak
              key: management-password
        - name: KEYCLOAK_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-postgresql
              key: password
        envFrom:
        - configMapRef:
            name: keycloak-env-vars
        resources:
          limits:
            cpu: 5000m
            memory: 3072Mi
          requests:
            cpu: 1000m
            memory: 1024Mi
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: https
          containerPort: 8443
          protocol: TCP
        - name: http-management
          containerPort: 9990
          protocol: TCP
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 300
          periodSeconds: 1
          successThreshold: 1
          timeoutSeconds: 5
          httpGet:
            path: /auth/
            port: http
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          httpGet:
            path: /auth/realms/master
            port: http
        volumeMounts: null
      volumes: null
---
apiVersion: v1
data:
  create-schema.sql: "CREATE TABLE VERSION\n(\n    MESSAGE_HASH VARCHAR  NOT NULL,\n
    \   CLASSIFICATION_MARKING VARCHAR  NOT NULL,\n    SENSOR_NUMBER BIGINT,\n    TOTAL_OBSERVATION_COUNT
    BIGINT NOT NULL,\n    DUPLICATE_OBSERVATION_COUNT SMALLINT NOT NULL,\n    ERROR_OBSERVATION_COUNT
    SMALLINT NOT NULL,\n    MESSAGE_TIME TIMESTAMP WITHOUT TIME ZONE NOT NULL,\n    SOURCE
    VARCHAR(10)  NOT NULL,\n    SOURCE_METADATA VARCHAR(256)  NOT NULL,\n    UPDATE_DATE
    TIMESTAMP WITHOUT TIME ZONE,\n    UPDATE_ORIGIN VARCHAR(64) ,\n    CREATE_DATE
    TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,\n    CREATE_ORIGIN
    VARCHAR(64)  NOT NULL,\n    VERSION BIGINT DEFAULT 0    \n);"
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: scripts
  namespace: atlas-observation-crud-service
---
---
# Source: cp-helm-charts/charts/cp-zookeeper/templates/poddisruptionbudget.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: kafka-cp-zookeeper-pdb
  labels:
    app: cp-zookeeper
    chart: cp-zookeeper-0.1.0
    release: kafka
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: cp-zookeeper
      release: kafka
  maxUnavailable: 1
---
# Source: cp-helm-charts/charts/cp-kafka/templates/jmx-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-cp-kafka-jmx-configmap
  labels:
    app: cp-kafka
    chart: cp-kafka-0.1.0
    release: kafka
    heritage: Helm
data:
  jmx-kafka-prometheus.yml: |+
    jmxUrl: service:jmx:rmi:///jndi/rmi://localhost:5555/jmxrmi
    lowercaseOutputName: true
    lowercaseOutputLabelNames: true
    ssl: false
    whitelistObjectNames:
    - kafka.server:type=ReplicaManager,name=*
    - kafka.controller:type=KafkaController,name=*
    - kafka.server:type=BrokerTopicMetrics,name=*
    - kafka.network:type=RequestMetrics,name=RequestsPerSec,request=*
    - kafka.network:type=SocketServer,name=NetworkProcessorAvgIdlePercent
    - kafka.server:type=ReplicaFetcherManager,name=MaxLag,clientId=*
    - kafka.server:type=KafkaRequestHandlerPool,name=RequestHandlerAvgIdlePercent
    - kafka.controller:type=ControllerStats,name=*
    - kafka.server:type=SessionExpireListener,name=*
    rules:
    - pattern : kafka.server<type=ReplicaManager, name=(.+)><>(Value|OneMinuteRate)
      name: "cp_kafka_server_replicamanager_$1"
    - pattern : kafka.controller<type=KafkaController, name=(.+)><>Value
      name: "cp_kafka_controller_kafkacontroller_$1"
    - pattern : kafka.server<type=BrokerTopicMetrics, name=(.+)><>OneMinuteRate
      name: "cp_kafka_server_brokertopicmetrics_$1"
    - pattern : kafka.network<type=RequestMetrics, name=RequestsPerSec, request=(.+)><>OneMinuteRate
      name: "cp_kafka_network_requestmetrics_requestspersec_$1"
    - pattern : kafka.network<type=SocketServer, name=NetworkProcessorAvgIdlePercent><>Value
      name: "cp_kafka_network_socketserver_networkprocessoravgidlepercent"
    - pattern : kafka.server<type=ReplicaFetcherManager, name=MaxLag, clientId=(.+)><>Value
      name: "cp_kafka_server_replicafetchermanager_maxlag_$1"
    - pattern : kafka.server<type=KafkaRequestHandlerPool, name=RequestHandlerAvgIdlePercent><>OneMinuteRate
      name: "cp_kafka_kafkarequesthandlerpool_requesthandleravgidlepercent"
    - pattern : kafka.controller<type=ControllerStats, name=(.+)><>OneMinuteRate
      name: "cp_kafka_controller_controllerstats_$1"
    - pattern : kafka.server<type=SessionExpireListener, name=(.+)><>OneMinuteRate
      name: "cp_kafka_server_sessionexpirelistener_$1"
---
# Source: cp-helm-charts/charts/cp-zookeeper/templates/jmx-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-cp-zookeeper-jmx-configmap
  labels:
    app: cp-zookeeper
    chart: cp-zookeeper-0.1.0
    release: kafka
    heritage: Helm
data:
  jmx-zookeeper-prometheus.yml: |+
    jmxUrl: service:jmx:rmi:///jndi/rmi://localhost:5555/jmxrmi
    lowercaseOutputName: true
    lowercaseOutputLabelNames: true
    ssl: false
    whitelistObjectNames:
    - org.apache.ZooKeeperService:name0=ReplicatedServer_id*
    - org.apache.ZooKeeperService:name0=ReplicatedServer_id*,name1=replica.*
    - org.apache.ZooKeeperService:name0=ReplicatedServer_id*,name1=replica.*,name2=*
    - org.apache.ZooKeeperService:name0=ReplicatedServer_id*,name1=replica.*,name2=*,name3=*
    rules:
    - pattern: "org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+)><>(\\w+)"
      name: "cp_zookeeper_$2"
    - pattern: "org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+), name1=replica.(\\d+)><>(\\w+)"
      name: "cp_zookeeper_$3"
      labels:
        replicaId: "$2"
    - pattern: "org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+), name1=replica.(\\d+), name2=(\\w+)><>(\\w+)"
      name: "cp_zookeeper_$4"
      labels:
        replicaId: "$2"
        memberType: "$3"
    - pattern: "org.apache.ZooKeeperService<name0=ReplicatedServer_id(\\d+), name1=replica.(\\d+), name2=(\\w+), name3=(\\w+)><>(\\w+)"
      name: "cp_zookeeper_$4_$5"
      labels:
        replicaId: "$2"
        memberType: "$3"
---
# Source: cp-helm-charts/charts/cp-control-center/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kafka-cp-control-center
  labels:
    app: cp-control-center
    chart: cp-control-center-0.1.0
    release: kafka
    heritage: Helm
spec:
  ports:
    - name: cc-http
      port: 9021
  selector:
    app: cp-control-center
    release: kafka
---
# Source: cp-helm-charts/charts/cp-kafka/templates/headless-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kafka-cp-kafka-headless
  labels:
    app: cp-kafka
    chart: cp-kafka-0.1.0
    release: kafka
    heritage: Helm
spec:
  ports:
    - port: 9092
      name: broker
  clusterIP: None
  selector:
    app: cp-kafka
    release: kafka
---
# Source: cp-helm-charts/charts/cp-kafka/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kafka-cp-kafka
  labels:
    app: cp-kafka
    chart: cp-kafka-0.1.0
    release: kafka
    heritage: Helm
spec:
  ports:
    - port: 9092
      name: broker
    - port: 5556
      name: metrics
  selector:
    app: cp-kafka
    release: kafka
---
# Source: cp-helm-charts/charts/cp-schema-registry/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kafka-cp-schema-registry
  labels:
    app: cp-schema-registry
    chart: cp-schema-registry-0.1.0
    release: kafka
    heritage: Helm
spec:
  ports:
    - name: schema-registry
      port: 8081
  selector:
    app: cp-schema-registry
    release: kafka
---
# Source: cp-helm-charts/charts/cp-zookeeper/templates/headless-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kafka-cp-zookeeper-headless
  labels:
    app: cp-zookeeper
    chart: cp-zookeeper-0.1.0
    release: kafka
    heritage: Helm
spec:
  ports:
    - port: 2888
      name: server
    - port: 3888
      name: leader-election
  clusterIP: None
  selector:
    app: cp-zookeeper
    release: kafka
---
# Source: cp-helm-charts/charts/cp-zookeeper/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kafka-cp-zookeeper
  labels:
    app: cp-zookeeper
    chart: cp-zookeeper-0.1.0
    release: kafka
    heritage: Helm
spec:
  type: 
  ports:
    - port: 2181
      name: client
    - name: metrics
      port: 5556
  selector:
    app: cp-zookeeper
    release: kafka
---
# Source: cp-helm-charts/charts/cp-control-center/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-cp-control-center
  labels:
    app: cp-control-center
    chart: cp-control-center-0.1.0
    release: kafka
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cp-control-center
      release: kafka
  template:
    metadata:
      labels:
        app: cp-control-center
        release: kafka
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5556"
    spec:
      containers:
        - name: cp-control-center
          image: "confluentinc/cp-enterprise-control-center:7.0.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: cc-http
              containerPort: 9021
              protocol: TCP
          resources:
            {}
          env:
            - name: CONTROL_CENTER_BOOTSTRAP_SERVERS
              value: PLAINTEXT://kafka-cp-kafka-headless:9092
            - name: CONTROL_CENTER_ZOOKEEPER_CONNECT
              value: 
            - name: CONTROL_CENTER_CONNECT_CLUSTER
              value: http://kafka-cp-kafka-connect:8083
            - name: CONTROL_CENTER_KSQL_URL
              value: http://kafka-cp-ksql-server:8088
            - name: CONTROL_CENTER_KSQL_ADVERTISED_URL
              value: http://kafka-cp-ksql-server:8088
            - name: CONTROL_CENTER_SCHEMA_REGISTRY_URL
              value: http://kafka-cp-schema-registry:8081
            - name: KAFKA_HEAP_OPTS
              value: "-Xms512M -Xmx512M"
            - name: "CONTROL_CENTER_REPLICATION_FACTOR"
              value: "1"
---
# Source: cp-helm-charts/charts/cp-schema-registry/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-cp-schema-registry
  labels:
    app: cp-schema-registry
    chart: cp-schema-registry-0.1.0
    release: kafka
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cp-schema-registry
      release: kafka
  template:
    metadata:
      labels:
        app: cp-schema-registry
        release: kafka
    spec:
      containers:
        - name: cp-schema-registry-server
          image: "confluentinc/cp-schema-registry:7.0.1"
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: schema-registry
              containerPort: 8081
              protocol: TCP
          resources:
            {}
          env:
          - name: SCHEMA_REGISTRY_HOST_NAME
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SCHEMA_REGISTRY_LISTENERS
            value: http://0.0.0.0:8081
          - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
            value: PLAINTEXT://kafka-cp-kafka-headless:9092
          - name: SCHEMA_REGISTRY_KAFKASTORE_GROUP_ID
            value: kafka
          - name: SCHEMA_REGISTRY_MASTER_ELIGIBILITY
            value: "true"
          - name: SCHEMA_REGISTRY_HEAP_OPTS
            value: "-Xms512M -Xmx512M"
          
          - name: JMX_PORT
            value: "5560"
      volumes:
---
# Source: cp-helm-charts/charts/cp-kafka/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-cp-kafka
  labels:
    app: cp-kafka
    chart: cp-kafka-0.1.0
    release: kafka
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: cp-kafka
      release: kafka
  serviceName: kafka-cp-kafka-headless
  podManagementPolicy: OrderedReady
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: cp-kafka
        release: kafka
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5556"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - cp-kafka
                  - key: "release"
                    operator: In
                    values:
                    - kafka
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: prometheus-jmx-exporter
        image: "solsson/kafka-prometheus-jmx-exporter@sha256:6f82e2b0464f50da8104acd7363fb9b995001ddff77d248379f8788e78946143"
        imagePullPolicy: "IfNotPresent"
        command:
        - java
        - -XX:+UnlockExperimentalVMOptions
        - -XX:+UseCGroupMemoryLimitForHeap
        - -XX:MaxRAMFraction=1
        - -XshowSettings:vm
        - -jar
        - jmx_prometheus_httpserver.jar
        - "5556"
        - /etc/jmx-kafka/jmx-kafka-prometheus.yml
        ports:
        - containerPort: 5556
        resources:
          {}
        volumeMounts:
        - name: jmx-config
          mountPath: /etc/jmx-kafka
      - name: cp-kafka-broker
        image: "confluentinc/cp-enterprise-kafka:7.0.1"
        imagePullPolicy: "IfNotPresent"
        securityContext:
          runAsUser: 0
        ports:
        - containerPort: 9092
          name: kafka
        - containerPort: 5555
          name: jmx
        resources:
          {}
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KAFKA_HEAP_OPTS
          value: -Xms512M -Xmx512M
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "kafka-cp-zookeeper-headless:2181"
        - name: KAFKA_LOG_DIRS
          value: "/opt/kafka/data-0/logs"
        - name: KAFKA_METRIC_REPORTERS
          value: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
        - name: CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS
          value: "PLAINTEXT://kafka-cp-kafka-headless:9092"
        - name: "KAFKA_AUTO_CREATE_TOPICS_ENABLE"
          value: "true"
        - name: "KAFKA_DEFAULT_REPLICATION_FACTOR"
          value: "1"
        - name: "KAFKA_LISTENER_SECURITY_PROTOCOL_MAP"
          value: "PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT"
        - name: "KAFKA_MIN_INSYNC_REPLICAS"
          value: "1"
        - name: "KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR"
          value: "1"
        - name: KAFKA_JMX_PORT
          value: "5555"
        # This is required because the Downward API does not yet support identification of
        # pod numbering in statefulsets. Thus, we are required to specify a command which
        # allows us to extract the pod ID for usage as the Kafka Broker ID.
        # See: https://github.com/kubernetes/kubernetes/issues/31218
        command:
        - sh
        - -exc
        - |
          export KAFKA_BROKER_ID=${HOSTNAME##*-} && \
          export KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${POD_NAME}.kafka-cp-kafka-headless.${POD_NAMESPACE}:9092,EXTERNAL://${HOST_IP}:$((31090 + ${KAFKA_BROKER_ID})) && \
          exec /etc/confluent/docker/run
        volumeMounts:
      volumes:
      - name: datadir-0
        emptyDir: {}
      - name: jmx-config
        configMap:
          name: kafka-cp-kafka-jmx-configmap
---
# Source: cp-helm-charts/charts/cp-zookeeper/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-cp-zookeeper
  labels:
    app: cp-zookeeper
    chart: cp-zookeeper-0.1.0
    release: kafka
    heritage: Helm
spec:
  selector:
    matchLabels:
      app: cp-zookeeper
      release: kafka
  serviceName: kafka-cp-zookeeper-headless
  podManagementPolicy: OrderedReady
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: cp-zookeeper
        release: kafka
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5556"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - cp-zookeeper
                  - key: "release"
                    operator: In
                    values:
                    - kafka
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: prometheus-jmx-exporter
        image: "solsson/kafka-prometheus-jmx-exporter@sha256:6f82e2b0464f50da8104acd7363fb9b995001ddff77d248379f8788e78946143"
        imagePullPolicy: "IfNotPresent"
        command:
        - java
        - -XX:+UnlockExperimentalVMOptions
        - -XX:+UseCGroupMemoryLimitForHeap
        - -XX:MaxRAMFraction=1
        - -XshowSettings:vm
        - -jar
        - jmx_prometheus_httpserver.jar
        - "5556"
        - /etc/jmx-zookeeper/jmx-zookeeper-prometheus.yml
        ports:
        - containerPort: 5556
        resources:
          {}
        volumeMounts:
        - name: jmx-config
          mountPath: /etc/jmx-zookeeper
      - name: cp-zookeeper-server
        image: "confluentinc/cp-zookeeper:7.0.1"
        imagePullPolicy: "IfNotPresent"
        securityContext:
          runAsUser: 0
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: server
        - containerPort: 3888
          name: leader-election
        - containerPort: 5555
          name: jmx
        resources:
          {}
        env:
        - name : KAFKA_HEAP_OPTS
          value: "-Xms512M -Xmx512M"
        - name : KAFKA_JMX_PORT
          value: "5555"
        - name : ZOOKEEPER_TICK_TIME
          value: "2000"
        - name : ZOOKEEPER_SYNC_LIMIT
          value: "5"
        - name : ZOOKEEPER_INIT_LIMIT
          value: "10"
        - name : ZOOKEEPER_MAX_CLIENT_CNXNS
          value: "60"
        - name : ZOOKEEPER_AUTOPURGE_SNAP_RETAIN_COUNT
          value: "3"
        - name : ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL
          value: "24"
        - name: ZOOKEEPER_CLIENT_PORT
          value: "2181"
        - name : ZOOKEEPER_SERVERS
          value: "kafka-cp-zookeeper-0.kafka-cp-zookeeper-headless.default:2888:3888"
        # ZOOKEEPER_SERVER_ID is required just to pass cp-zookeeper ensure script for env check,
        # the value(metadata.mame) is not used and will be overwritten in command part
        - name: ZOOKEEPER_SERVER_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        command:
        - "bash"
        - "-c"
        - |
          ZK_FIX_HOST_REGEX="s/${HOSTNAME}\.[^:]*:/0.0.0.0:/g"
          ZOOKEEPER_SERVER_ID=$((${HOSTNAME##*-}+1)) \
          ZOOKEEPER_SERVERS=`echo $ZOOKEEPER_SERVERS | sed -e "$ZK_FIX_HOST_REGEX"` \
          /etc/confluent/docker/run
        volumeMounts:
        - name: datadir
          mountPath: /var/lib/zookeeper/data
        - name: datalogdir
          mountPath: /var/lib/zookeeper/log
      volumes:
      
      - name: datadir
        emptyDir: {}
      - name: datalogdir
        emptyDir: {}
      - name: jmx-config
        configMap:
          name: kafka-cp-zookeeper-jmx-configmap
---
apiVersion: v1
items:
- apiVersion: v1
  data:
    application.properties: |-
      spring.kafka.consumer.group-id=\${spring.application.name}
      spring.kafka.bootstrap-servers=kafka-cp-kafka.kafka:9092
      spring.kafka.properties.schema.registry.url=http://kafka-cp-schema-registry.kafka:8081
      spring.kafka.properties.specific.avro.reader=true
      spring.kafka.properties.auto.register.schemas=true
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"application.properties":"spring.kafka.consumer.group-id=\\${spring.application.name}\nspring.kafka.bootstrap-servers=kafka-cp-kafka.kafka:9092\nspring.kafka.properties.schema.registry.url=http://kafka-cp-schema-registry.kafka:8081\nspring.kafka.properties.specific.avro.reader=true\nspring.kafka.properties.auto.register.schemas=true"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"kafka-general-config","namespace":"atlas-infrastructure"}}
    name: kafka-general-config
    namespace: atlas-infrastructure
- apiVersion: v1
  data:
    application.properties: |-
      ssac2.service.classification.url=http://atlas-classification-service.atlas-classification-service.svc/classification
      ssac2.service.crud.common.url=http://atlas-common-crud-service.atlas-common-crud-service.svc/common-crud
      ssac2.service.crud.controls.url=http://atlas-controls-crud-service.atlas-controls-crud-service.svc/controls-crud
      ssac2.service.crud.environment.url=http://atlas-environment-crud-service.atlas-environment-crud-service.svc/environment-crud
      ssac2.service.crud.notes.url=http://atlas-notes-crud-service.atlas-notes-crud-service.svc/notes-crud
      ssac2.service.crud.orbital.url=http://atlas-orbital-crud-service.atlas-orbital-crud-service.svc/orbital-crud
      ssac2.service.crud.satellite.url=http://atlas-satellite-crud-service.atlas-satellite-crud-service.svc/satellite-crud
      ssac2.service.crud.sensor.url=http://atlas-sensor-crud-service.atlas-sensor-crud-service.svc/sensor-crud
      ssac2.service.crud.ssaevent.url=http://atlas-ssaevent-crud-service.atlas-ssaevent-crud-service.svc/ssaevent-crud
      ssac2.service.crud.observation.url=http://atlas-observation-crud-service.atlas-observation-crud-service.svc/observation-crud
      ssac2.service.crud.tasking.url=http://atlas-tasking-crud-service.atlas-tasking-crud-service.svc/tasking-crud
      ssac2.service.crud.user.url=http://atlas-user-crud-service.atlas-user-crud-service.svc/user-crud

      ssac2.service.aggregator.crud.url=http://atlas-crud-aggregator-service.atlas-aggregators-service.svc/crud-aggregator
      ssac2.service.aggregator.sensor.url=http://atlas-sensor-aggregator-service.atlas-aggregators-service.svc/sensor-aggregator

      ssac2.service.asw.elcom.url=http://atlas-asw-elcom-service.atlas-asw-service.svc/elcom
      ssac2.service.asw.eod.url=http://atlas-asw-eod-service.atlas-asw-service.svc
      ssac2.service.asw.iodet.url=http://atlas-asw-iodet-service.atlas-asw-service.svc

      ssac2.service.catalog-management.url=http://atlas-catalog-management-app.atlas-catalog-management-app.svc/catalog-management
      ssac2.service.event-management.url=http://atlas-event-management.atlas-event-management.svc/event-management
      ssac2.service.mandc.url=http://atlas-mandc-service.atlas-mandc-service.svc/mandc-service
      ssac2.service.mps.url=http://atlas-mps-service.atlas-mps-service.svc/mps-service
      ssac2.service.session-manager.url=http://atlas-session-manager-service.atlas-session-manager-service.svc/session-manager


      cs3.receiver.url=http://cs3-output-receiver.atlas-cs3-translator-service.svc/cs3-output-receiver
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"application.properties":"ssac2.service.classification.url=http://atlas-classification-service.atlas-classification-service.svc/classification\nssac2.service.crud.common.url=http://atlas-common-crud-service.atlas-common-crud-service.svc/common-crud\nssac2.service.crud.controls.url=http://atlas-controls-crud-service.atlas-controls-crud-service.svc/controls-crud\nssac2.service.crud.environment.url=http://atlas-environment-crud-service.atlas-environment-crud-service.svc/environment-crud\nssac2.service.crud.notes.url=http://atlas-notes-crud-service.atlas-notes-crud-service.svc/notes-crud\nssac2.service.crud.orbital.url=http://atlas-orbital-crud-service.atlas-orbital-crud-service.svc/orbital-crud\nssac2.service.crud.satellite.url=http://atlas-satellite-crud-service.atlas-satellite-crud-service.svc/satellite-crud\nssac2.service.crud.sensor.url=http://atlas-sensor-crud-service.atlas-sensor-crud-service.svc/sensor-crud\nssac2.service.crud.ssaevent.url=http://atlas-ssaevent-crud-service.atlas-ssaevent-crud-service.svc/ssaevent-crud\nssac2.service.crud.observation.url=http://atlas-observation-crud-service.atlas-observation-crud-service.svc/observation-crud\nssac2.service.crud.tasking.url=http://atlas-tasking-crud-service.atlas-tasking-crud-service.svc/tasking-crud\nssac2.service.crud.user.url=http://atlas-user-crud-service.atlas-user-crud-service.svc/user-crud\n\nssac2.service.aggregator.crud.url=http://atlas-crud-aggregator-service.atlas-aggregators-service.svc/crud-aggregator\nssac2.service.aggregator.sensor.url=http://atlas-sensor-aggregator-service.atlas-aggregators-service.svc/sensor-aggregator\n\nssac2.service.asw.elcom.url=http://atlas-asw-elcom-service.atlas-asw-service.svc/elcom\nssac2.service.asw.eod.url=http://atlas-asw-eod-service.atlas-asw-service.svc\nssac2.service.asw.iodet.url=http://atlas-asw-iodet-service.atlas-asw-service.svc\n\nssac2.service.catalog-management.url=http://atlas-catalog-management-app.atlas-catalog-management-app.svc/catalog-management\nssac2.service.event-management.url=http://atlas-event-management.atlas-event-management.svc/event-management\nssac2.service.mandc.url=http://atlas-mandc-service.atlas-mandc-service.svc/mandc-service\nssac2.service.mps.url=http://atlas-mps-service.atlas-mps-service.svc/mps-service\nssac2.service.session-manager.url=http://atlas-session-manager-service.atlas-session-manager-service.svc/session-manager\n\n\ncs3.receiver.url=http://cs3-output-receiver.atlas-cs3-translator-service.svc/cs3-output-receiver"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"atlas-service-url-config","namespace":"atlas-infrastructure"}}
    name: atlas-service-url-config
    namespace: atlas-infrastructure
- apiVersion: v1
  data:
    ssac2.classification.data-types.afwa-axxx51.default: U
    ssac2.classification.data-types.afwa-fxxx01.default: U
    ssac2.classification.data-types.afwa-woxx50.default: U
    ssac2.classification.data-types.afwa-woxx53.default: U
    ssac2.classification.data-types.afwa-woxx55.default: U
    ssac2.classification.data-types.codac.default: U
    ssac2.classification.data-types.dca.default: U
    ssac2.classification.data-types.geodb.default: U
    ssac2.classification.data-types.mu13.default: U
    ssac2.classification.data-types.mu49.default: U
    ssac2.classification.data-types.slr.default: U
    ssac2.classification.data-types.sol-afwa.default: U
    ssac2.classification.data-types.sol-asw.default: U
    ssac2.classification.data-types.sol-jbh09.default: U
    ssac2.classification.data-types.sp.default: U
    ssac2.classification.data-types.su66.default: U
    ssac2.classification.data-types.su77.default: U
    ssac2.classification.data-types.su78.default: U
    ssac2.classification.data-types.tcon-earth-orientation.default: U
    ssac2.classification.data-types.tcon.default: U
    ssac2.classification.data-types.vcm.default: U
    ssac2.classification.data-types.vismag-obs.default: U
    ssac2.classification.dc-tolerances: U
    ssac2.classification.dca-temp: U
    ssac2.classification.dcpdefaults: U
    ssac2.classification.dcs: U
    ssac2.classification.edr-bin: U
    ssac2.classification.ephemeris: U
    ssac2.classification.extrap-params: U
    ssac2.classification.rcs: U
    ssac2.classification.routine-tasking: U
    ssac2.classification.satellite: U
    ssac2.classification.sensor: U
    ssac2.classification.session-lock: U
    ssac2.classification.solarflux: U
    ssac2.classification.system-dissemination: DS-DOD
    ssac2.classification.system-high: U//DS-DOD
    ssac2.classification.system-releasabilities: USA
    ssac2.classification.time-constants: U
    ssac2.classification.vismag: U
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"ssac2.classification.data-types.afwa-axxx51.default":"U","ssac2.classification.data-types.afwa-fxxx01.default":"U","ssac2.classification.data-types.afwa-woxx50.default":"U","ssac2.classification.data-types.afwa-woxx53.default":"U","ssac2.classification.data-types.afwa-woxx55.default":"U","ssac2.classification.data-types.codac.default":"U","ssac2.classification.data-types.dca.default":"U","ssac2.classification.data-types.geodb.default":"U","ssac2.classification.data-types.mu13.default":"U","ssac2.classification.data-types.mu49.default":"U","ssac2.classification.data-types.slr.default":"U","ssac2.classification.data-types.sol-afwa.default":"U","ssac2.classification.data-types.sol-asw.default":"U","ssac2.classification.data-types.sol-jbh09.default":"U","ssac2.classification.data-types.sp.default":"U","ssac2.classification.data-types.su66.default":"U","ssac2.classification.data-types.su77.default":"U","ssac2.classification.data-types.su78.default":"U","ssac2.classification.data-types.tcon-earth-orientation.default":"U","ssac2.classification.data-types.tcon.default":"U","ssac2.classification.data-types.vcm.default":"U","ssac2.classification.data-types.vismag-obs.default":"U","ssac2.classification.dc-tolerances":"U","ssac2.classification.dca-temp":"U","ssac2.classification.dcpdefaults":"U","ssac2.classification.dcs":"U","ssac2.classification.edr-bin":"U","ssac2.classification.ephemeris":"U","ssac2.classification.extrap-params":"U","ssac2.classification.rcs":"U","ssac2.classification.routine-tasking":"U","ssac2.classification.satellite":"U","ssac2.classification.sensor":"U","ssac2.classification.session-lock":"U","ssac2.classification.solarflux":"U","ssac2.classification.system-dissemination":"DS-DOD","ssac2.classification.system-high":"U//DS-DOD","ssac2.classification.system-releasabilities":"USA","ssac2.classification.time-constants":"U","ssac2.classification.vismag":"U"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"atlas-classification-config","namespace":"atlas-infrastructure"}}
    name: atlas-classification-config
    namespace: atlas-infrastructure
- apiVersion: v1
  data:
    cs3.kafka.topic.cs3-ingestmetricobs-history.name: IngestMetricObs.History.Observations
    cs3.kafka.topic.cs3-messages-obs.name: CS3.Data.Observations
    ndpp.kafka.topic.ndpp-messages-obs.name: NDPP.Data.Observations
    retina.kafka.topic.retina-messages-obs.name: Retina.Data.Observations
    ssac2.kafka.topic.adc-command-priority-dc-request.name: Adc.Command.PriorityDcRequest
    ssac2.kafka.topic.adc-command-routine-dc-request.name: Adc.Command.RoutineDcRequest
    ssac2.kafka.topic.adc-notification-abnormal-update.name: ADC.Event.ASWAbnormalUpdateNotification
    ssac2.kafka.topic.adc-notification-od-failure.name: ADC.Event.ASWODFailureNotification
    ssac2.kafka.topic.adc-notification-od-finish.name: ADC.Event.ASWODFinishNotification
    ssac2.kafka.topic.adc-notification-possible-maneuver.name: ADC.Event.ASWPossibleManeuverNotification
    ssac2.kafka.topic.adc-trigger-requests.name: Adc.Command.AdcTriggerRequests
    ssac2.kafka.topic.auto-edr-tasking-group-cmd.name: SensorDataService.Command.AutoEdrTaskingGroup
    ssac2.kafka.topic.auto-edr-tasking-group-data.name: SensorDataService.Data.AutoEdrTaskingGroup
    ssac2.kafka.topic.auto-maintenance-class-cmd.name: SensorDataService.Command.AutoMaintenanceClass
    ssac2.kafka.topic.auto-maintenance-class-data.name: SensorDataService.Data.AutoMaintenanceClass
    ssac2.kafka.topic.autoedrtaskinggroup-aggregate-data.name: CrudAggregatorService.Data.AutoEdrTaskingGroupAggregate
    ssac2.kafka.topic.candidate-formation-params-cmd.name: EventDataService.Command.CandidateFormationParameters
    ssac2.kafka.topic.candidate-formation-params-data.name: EventDataService.Data.CandidateFormationParameters
    ssac2.kafka.topic.candidate-formation-results.name: CNF.Event.CandidateFormationResults
    ssac2.kafka.topic.catalog-management.notification.name: CatalogManagement.Event.CatalogManagementNotification
    ssac2.kafka.topic.comment-code-cmd.name: SatelliteDataService.Command.CommentCode
    ssac2.kafka.topic.comment-code-data.name: SatelliteDataService.Data.CommentCode
    ssac2.kafka.topic.comparison-residuals-cmd.name: OrbitalDataService.Command.ComparisonResiduals
    ssac2.kafka.topic.constellation-cmd.name: SatelliteDataService.Command.Constellation
    ssac2.kafka.topic.constellation-data.name: SatelliteDataService.Data.Constellation
    ssac2.kafka.topic.contact-cmd.name: EnvironmentDataService.Command.Contact
    ssac2.kafka.topic.contact-data.name: EnvironmentDataService.Data.Contact
    ssac2.kafka.topic.controls-template-criteria-cmd.name: SatelliteDataService.Command.ControlsTemplateCriteria
    ssac2.kafka.topic.controls-template-criteria-data.name: SatelliteDataService.Data.ControlsTemplateCriteria
    ssac2.kafka.topic.country-cmd.name: EnvironmentDataService.Command.Country
    ssac2.kafka.topic.country-data.name: EnvironmentDataService.Data.Country
    ssac2.kafka.topic.create-dcsummary-cmd.name: OrbitalDataService.Command.CreateDcSummary
    ssac2.kafka.topic.create-gpelements-cmd.name: OrbitalDataService.Command.CreateGpElements
    ssac2.kafka.topic.create-radar-cross-section-cmd.name: SatelliteDataService.Command.CreateRadarCrossSection
    ssac2.kafka.topic.create-statevector-cmd.name: OrbitalDataService.Command.CreateStateVector
    ssac2.kafka.topic.current-dcsummary-updated.name: OrbitalDataService.Event.CurrentDcSummaryUpdated
    ssac2.kafka.topic.current-gpelements-updated.name: OrbitalDataService.Event.CurrentGpElementsUpdated
    ssac2.kafka.topic.current-radar-cross-section-updated.name: SatelliteDataService.Event.CurrentRcsUpdated
    ssac2.kafka.topic.current-statevector-updated.name: OrbitalDataService.Event.CurrentStateVectorUpdated
    ssac2.kafka.topic.current-vismag-cmd.name: SatelliteDataService.Command.CurrentVismag
    ssac2.kafka.topic.current-vismag-data.name: SatelliteDataService.Data.CurrentVismag
    ssac2.kafka.topic.currentegpsummary-data.name: OrbitalDataService.Data.CurrentEgpSummary
    ssac2.kafka.topic.currentstatevector-data.name: OrbitalDataService.Data.CurrentStateVector
    ssac2.kafka.topic.custom-tasking-group-cmd.name: SensorDataService.Command.CustomTaskingGroup
    ssac2.kafka.topic.custom-tasking-group-data.name: SensorDataService.Data.CustomTaskingGroup
    ssac2.kafka.topic.customtaskinggroup-aggregate-data.name: SensorDataService.Data.CustomTaskingGroupAggregate
    ssac2.kafka.topic.dc-controls-cmd.name: SatelliteDataService.Command.DcControls
    ssac2.kafka.topic.dc-controls-data.name: SatelliteDataService.Data.DcControls
    ssac2.kafka.topic.dc-ephemeris-aggregate-cmd.name: OrbitalDataService.Command.DcEphemerisAggregate
    ssac2.kafka.topic.dc-ephemeris-aggregate-data.name: OrbitalDataService.Data.DcEphemerisAggregate
    ssac2.kafka.topic.dc-tolerances-cmd.name: SatelliteDataService.Command.DcTolerances
    ssac2.kafka.topic.dc-tolerances-data.name: SatelliteDataService.Data.DcTolerances
    ssac2.kafka.topic.dcatemp-aggregate-cmd.name: EnvironmentDataService.Command.DcaTempAggregate
    ssac2.kafka.topic.dcatemp-aggregate-data.name: EnvironmentDataService.Data.DcaTempAggregate
    ssac2.kafka.topic.dcatemp-ingest.name: Cavenet.Ingest.DcaTemp
    ssac2.kafka.topic.dciteration-cmd.name: OrbitalDataService.Command.DcIteration
    ssac2.kafka.topic.dciteration-data.name: OrbitalDataService.Data.DcIteration
    ssac2.kafka.topic.dcpdefaults-cmd.name: EnvironmentDataService.Command.DcpDefaults
    ssac2.kafka.topic.dcpdefaults-data.name: EnvironmentDataService.Data.DcpDefaults
    ssac2.kafka.topic.dcpdefaults-ingest.name: Cavenet.Ingest.DcpDefaults
    ssac2.kafka.topic.decayprediction-cmd.name: EventDataService.Command.DecayPrediction
    ssac2.kafka.topic.decayprediction-data.name: EventDataService.Data.DecayPrediction
    ssac2.kafka.topic.detect-angular-rate-cmd.name: SensorDataService.Command.DetectAngularRate
    ssac2.kafka.topic.detect-angular-rate-data.name: SensorDataService.Data.DetectAngularRate
    ssac2.kafka.topic.detect-background-sky-cmd.name: SensorDataService.Command.DetectBackgroundSky
    ssac2.kafka.topic.detect-background-sky-data.name: SensorDataService.Data.DetectBackgroundSky
    ssac2.kafka.topic.dynamicconsiderparameter-cmd.name: SatelliteDataService.Command.DynamicConsiderParameter
    ssac2.kafka.topic.dynamicconsiderparameter-data.name: SatelliteDataService.Data.DynamicConsiderParameter
    ssac2.kafka.topic.earth-orientation.name: Environment.Ingest.EarthOrientation
    ssac2.kafka.topic.earthconstant-cmd.name: EnvironmentDataService.Command.EarthConstant
    ssac2.kafka.topic.earthconstant-data.name: EnvironmentDataService.Data.EarthConstant
    ssac2.kafka.topic.egpsummary-cmd.name: OrbitalDataService.Command.EgpSummary
    ssac2.kafka.topic.egpsummary-data.name: OrbitalDataService.Data.EgpSummary
    ssac2.kafka.topic.element-comparison-threshold-cmd.name: SatelliteDataService.Command.ElementComparisonThreshold
    ssac2.kafka.topic.element-comparison-threshold-data.name: SatelliteDataService.Data.ElementComparisonThreshold
    ssac2.kafka.topic.element-conversion-controls-cmd.name: SatelliteDataService.Command.ElementConversionControls
    ssac2.kafka.topic.element-conversion-controls-data.name: SatelliteDataService.Data.ElementConversionControls
    ssac2.kafka.topic.energy-dissipation-rate-bin-cmd.name: OrbitalDataService.Command.EnergyDissipationRateBin
    ssac2.kafka.topic.energy-dissipation-rate-bin-data.name: OrbitalDataService.Data.EnergyDissipationRateBin
    ssac2.kafka.topic.energy-dissipation-rate-bin-ingest.name: Cavenet.Ingest.EnergyDissipationRateBin
    ssac2.kafka.topic.ephemeris-comparison-threshold-cmd.name: SatelliteDataService.Command.EphemerisComparisonThreshold
    ssac2.kafka.topic.ephemeris-comparison-threshold-data.name: SatelliteDataService.Data.EphemerisComparisonThreshold
    ssac2.kafka.topic.ephemeris-propagate-and-compare-event.name: ExternalEphemeris.Event.PropagateAndCompare
    ssac2.kafka.topic.ephemeris-staging-aggregate-cmd.name: OrbitalDataService.Command.EphemerisStagingAggregate
    ssac2.kafka.topic.ephemeris-staging-aggregate-data.name: OrbitalDataService.Data.EphemerisStagingAggregate
    ssac2.kafka.topic.event-cmd.name: EventDataService.Command.Event
    ssac2.kafka.topic.event-data.name: EventDataService.Data.Event
    ssac2.kafka.topic.eventdata-cmd.name: EventDataService.Command.EventData
    ssac2.kafka.topic.eventdata-data.name: EventDataService.Data.EventData
    ssac2.kafka.topic.eventsat-aggregate-data.name: EventDataService.Data.EventSatAggregate
    ssac2.kafka.topic.eventsat-cmd.name: EventDataService.Command.EventSat
    ssac2.kafka.topic.eventsat-data.name: EventDataService.Data.EventSat
    ssac2.kafka.topic.external-ephemeris-aggregate-cmd.name: OrbitalDataService.Command.ExternalEphemerisAggregate
    ssac2.kafka.topic.external-ephemeris-aggregate-data.name: OrbitalDataService.Data.ExternalEphemerisAggregate
    ssac2.kafka.topic.external-gpelement-results-cmd.name: OrbitalDataService.Command.ExternalGpElementResults
    ssac2.kafka.topic.extrap-params-ingest.name: Cavenet.Ingest.ExtrapolationParameters
    ssac2.kafka.topic.extrapolation-params-cmd.name: OrbitalDataService.Command.ExtrapolationParams
    ssac2.kafka.topic.extrapolation-params-data.name: OrbitalDataService.Data.ExtrapolationParams
    ssac2.kafka.topic.forced-sensor-tasking-cmd.name: SensorDataService.Command.ForcedSensorTasking
    ssac2.kafka.topic.forced-sensor-tasking-data.name: SensorDataService.Data.ForcedSensorTasking
    ssac2.kafka.topic.geodb-cmd.name: OrbitalDataService.Command.Geodb
    ssac2.kafka.topic.geopotential-model-cmd.name: EnvironmentDataService.Command.GeopotentialModel
    ssac2.kafka.topic.geopotential-model-data.name: EnvironmentDataService.Data.GeopotentialModel
    ssac2.kafka.topic.geopotential-term-cmd.name: EnvironmentDataService.Command.GeopotentialTerm
    ssac2.kafka.topic.geopotential-term-data.name: EnvironmentDataService.Data.GeopotentialTerm
    ssac2.kafka.topic.gp-ephemeris-cmd.name: SpephService.Command.GpEphemeris
    ssac2.kafka.topic.gp-speph-results-data.name: SpephService.Data.GpSpephResults
    ssac2.kafka.topic.inp-ingest: Cavenet.Ingest.Inp
    ssac2.kafka.topic.integrator-controls-cmd.name: SatelliteDataService.Command.IntegratorControls
    ssac2.kafka.topic.integrator-controls-data.name: SatelliteDataService.Data.IntegratorControls
    ssac2.kafka.topic.iodet-one-track-elset-data.name: Iodet.Data.OneTrackElementSets
    ssac2.kafka.topic.iron-cmd.name: SatelliteDataService.Command.Iron
    ssac2.kafka.topic.iron-data.name: SatelliteDataService.Data.Iron
    ssac2.kafka.topic.location-cmd.name: SensorDataService.Command.Location
    ssac2.kafka.topic.location-data.name: SensorDataService.Data.Location
    ssac2.kafka.topic.maneuver-cmd.name: OrbitalDataService.Command.Maneuver
    ssac2.kafka.topic.maneuver-data.name: OrbitalDataService.Data.Maneuver
    ssac2.kafka.topic.maneuver-log-cmd.name: OrbitalDataService.Command.ManeuverLog
    ssac2.kafka.topic.maneuver-log-data.name: OrbitalDataService.Data.ManeuverLog
    ssac2.kafka.topic.manual-sensor-tasking-cmd.name: SatelliteDataService.Command.ManualSensorTasking
    ssac2.kafka.topic.manual-sensor-tasking-data.name: SatelliteDataService.Data.ManualSensorTasking
    ssac2.kafka.topic.manual-tasking-cmd.name: SatelliteDataService.Command.ManualTasking
    ssac2.kafka.topic.manual-tasking-data.name: SatelliteDataService.Data.ManualTasking
    ssac2.kafka.topic.manually-excluded-sensor-cmd.name: SatelliteDataService.Command.ManuallyExcludedSensor
    ssac2.kafka.topic.manually-excluded-sensor-data.name: SatelliteDataService.Data.ManuallyExcludedSensor
    ssac2.kafka.topic.mission-cmd.name: SatelliteDataService.Command.Mission
    ssac2.kafka.topic.mission-data.name: SatelliteDataService.Data.Mission
    ssac2.kafka.topic.mpe-folder-cmd.name: EventDataService.Command.MpeFolder
    ssac2.kafka.topic.mpe-folder-data.name: EventDataService.Data.MpeFolder
    ssac2.kafka.topic.mpe-processing-config-cmd.name: EventDataService.Command.MpeProcessingConfiguration
    ssac2.kafka.topic.mpe-processing-config-data.name: EventDataService.Data.MpeProcessingConfiguration
    ssac2.kafka.topic.mps-assoc-cmd.name: AssocService.Command.MpsAssoc
    ssac2.kafka.topic.obs-assoc-results-UO.name: ObsProcessing.Data.UnassociatedObservationResults
    ssac2.kafka.topic.obs-assoc-results.name: ObsProcessing.Data.ObservationAssociationResults
    ssac2.kafka.topic.obs-metrics-age-tasks.name: age-tasks
    ssac2.kafka.topic.obs-metrics-all-rate.name: ObsProcessing.Data.ObservationMetricsAllRate
    ssac2.kafka.topic.obs-metrics-assoc-history-records.name: ObsProcessing.Data.ObservationAssociationHistoryRecords
    ssac2.kafka.topic.obs-metrics-count-alert.name: Retina.Data.TotalAlertCount
    ssac2.kafka.topic.obs-metrics-count-eossa.name: Retina.Data.TotalEossaCount
    ssac2.kafka.topic.obs-metrics-count-image.name: Retina.Data.TotalImageCount
    ssac2.kafka.topic.obs-metrics-json-alert-records.name: Retina.Data.JSONAlertRecord
    ssac2.kafka.topic.obs-metrics-json-eossa-records.name: Retina.Data.JSONEossaRecord
    ssac2.kafka.topic.obs-metrics-json-image-records.name: Retina.Data.JSONImageRecord
    ssac2.kafka.topic.obs-metrics-obs-hist-count-by-seq-all.name: ObsProcessing.Data.ObservationHistoryCountBySequenceAll
    ssac2.kafka.topic.obs-metrics-obs-hist-count-by-seq-initial.name: ObsProcessing.Data.ObservationHistoryCountBySequenceInitial
    ssac2.kafka.topic.obs-metrics-obs-hist-count-by-seq.name: ObsProcessing.Data.ObservationHistoryCountBySequence
    ssac2.kafka.topic.obs-metrics-obs-time-by-sen-latest.name: ObsProcessing.Data.ObservationTimeBySensorLatest
    ssac2.kafka.topic.obs-metrics-obs-time-by-sen.name: ObsProcessing.Data.ObservationTimeBySensor
    ssac2.kafka.topic.obs-metrics-withkey-alert.name: Retina.Data.AlertDataWithKey
    ssac2.kafka.topic.obs-metrics-withkey-eossa.name: Retina.Data.EossaDataWithKey
    ssac2.kafka.topic.obs-metrics-withkey-image.name: Retina.Data.ImageDataWithKey
    ssac2.kafka.topic.obs-notification-excessive-residuals.name: ObsProcessing.Event.ExcessiveResiduals
    ssac2.kafka.topic.obs-notification-observation-association.name: ObsProcessing.Event.ObservationAssociationNotifications
    ssac2.kafka.topic.observation-retina-cmd.name: Retina.Data.Observations
    ssac2.kafka.topic.observation-retina-eossa.name: ObservationDataService.Command.EOSSA
    ssac2.kafka.topic.observation-retina-event-eossa.name: Retina.Event.EOSSA
    ssac2.kafka.topic.obsproc-aggregate-cmd.name: ObservationDataService.Command.ObsprocAggregate
    ssac2.kafka.topic.obsproc-retag-assoc-requests.name: ObsProcessing.Command.RetagAssociationRequests
    ssac2.kafka.topic.obsproc-verify-assoc-requests.name: ObsProcessing.Command.VerifyAssociationRequests
    ssac2.kafka.topic.od-ephemeris-aggregate-cmd.name: OrbitalDataService.Command.OdEphemerisAggregate
    ssac2.kafka.topic.od-ephemeris-aggregate-data.name: OrbitalDataService.Data.OdEphemerisAggregate
    ssac2.kafka.topic.optical-detectability-cmd.name: SensorDataService.Command.OpticalDetectability
    ssac2.kafka.topic.optical-detectability-data.name: SensorDataService.Data.OpticalDetectability
    ssac2.kafka.topic.orbit-definition-cmd.name: OrbitalDataService.Command.OrbitDefinition
    ssac2.kafka.topic.orbit-definition-data.name: OrbitalDataService.Data.OrbitDefinition
    ssac2.kafka.topic.orbit-definition-group-cmd.name: OrbitalDataService.Command.OrbitDefinitionGroup
    ssac2.kafka.topic.orbit-definition-group-data.name: OrbitalDataService.Data.OrbitDefinitionGroup
    ssac2.kafka.topic.orbit-maneuver-threshold-cmd.name: OrbitalDataService.Command.OrbitManeuverThreshold
    ssac2.kafka.topic.orbit-maneuver-threshold-data.name: OrbitalDataService.Data.OrbitManeuverThreshold
    ssac2.kafka.topic.owner-operator-cmd.name: EnvironmentDataService.Command.OwnerOperator
    ssac2.kafka.topic.owner-operator-data.name: EnvironmentDataService.Data.OwnerOperator
    ssac2.kafka.topic.payload-cmd.name: SatelliteDataService.Command.Payload
    ssac2.kafka.topic.payload-contact-cmd.name: SatelliteDataService.Command.PayloadContact
    ssac2.kafka.topic.payload-contact-data.name: SatelliteDataService.Data.PayloadContact
    ssac2.kafka.topic.payload-data.name: SatelliteDataService.Data.Payload
    ssac2.kafka.topic.payload-mission-cmd.name: SatelliteDataService.Command.PayloadMission
    ssac2.kafka.topic.payload-mission-data.name: SatelliteDataService.Data.PayloadMission
    ssac2.kafka.topic.payload-status-cmd.name: SatelliteDataService.Command.PayloadStatus
    ssac2.kafka.topic.payload-status-data.name: SatelliteDataService.Data.PayloadStatus
    ssac2.kafka.topic.pct-event.name: ProphylacticCrossTag.Event.CrosstagCandidateNotifications
    ssac2.kafka.topic.pem-ingest.name: Cavenet.Ingest.PredictionErrorModel
    ssac2.kafka.topic.perturbation-controls-cmd.name: SatelliteDataService.Command.PerturbationControls
    ssac2.kafka.topic.perturbation-controls-data.name: SatelliteDataService.Data.PerturbationControls
    ssac2.kafka.topic.post-maneuver-data-cmd.name: OrbitalDataService.Command.PostManeuverData
    ssac2.kafka.topic.post-maneuver-data-data.name: OrbitalDataService.Data.PostManeuverData
    ssac2.kafka.topic.prediction-controls-cmd.name: SatelliteDataService.Command.PredictionControls
    ssac2.kafka.topic.prediction-controls-data.name: SatelliteDataService.Data.PredictionControls
    ssac2.kafka.topic.prediction-error-model-cmd.name: SatelliteDataService.Command.PredictionErrorModel
    ssac2.kafka.topic.prediction-error-model-data.name: SatelliteDataService.Data.PredictionErrorModel
    ssac2.kafka.topic.process-level-control-cmd.name: SatelliteDataService.Command.ProcessLevelControl
    ssac2.kafka.topic.process-level-control-data.name: SatelliteDataService.Data.ProcessLevelControl
    ssac2.kafka.topic.rcs-matrix-cmd.name: SatelliteDataService.Command.RcsMatrix
    ssac2.kafka.topic.rcs-matrix-data.name: SatelliteDataService.Data.RcsMatrix
    ssac2.kafka.topic.retag-priority-cmd.name: SatelliteDataService.Command.RetagPriority
    ssac2.kafka.topic.retag-priority-data.name: SatelliteDataService.Data.RetagPriority
    ssac2.kafka.topic.retina-message-gen-event.name: MessageGen.Event.UCT
    ssac2.kafka.topic.routine-satellite-tasking-aggregate-cmd.name: TaskingDataService.Command.RoutineSatelliteTaskingAggregate
    ssac2.kafka.topic.routine-satellite-tasking-aggregate-data.name: TaskingDataService.Data.RoutineSatelliteTaskingAggregate
    ssac2.kafka.topic.routine-satellite-tasking-data.name: TaskingDataService.Data.RoutineSatelliteTasking
    ssac2.kafka.topic.routine-sensor-tasking-data.name: TaskingDataService.Data.RoutineSensorTasking
    ssac2.kafka.topic.routine-sensor-tasking-request-cmd.name: SensorTasking.Command.RoutineSensorTaskingRequest
    ssac2.kafka.topic.routine-sensor-tasking-response-data.name: TaskingDataService.Data.RoutineSensorTaskingResponse
    ssac2.kafka.topic.routine-sensor-tasking-run-data.name: TaskingDataService.Data.RoutineSensorTaskingRun
    ssac2.kafka.topic.routine-sensor-tasking.progress-event.name: SensorTasking.Event.ProgressEvent
    ssac2.kafka.topic.rso-reservation-cmd.name: SatelliteDataService.Command.RsoReservation
    ssac2.kafka.topic.rso-reservation-data.name: SatelliteDataService.Data.RsoReservation
    ssac2.kafka.topic.sat-capability-cmd.name: SatelliteDataService.Command.SatCapability
    ssac2.kafka.topic.sat-capability-data.name: SatelliteDataService.Data.SatCapability
    ssac2.kafka.topic.sat-cat-map-cmd.name: SensorDataService.Command.SatCatMap
    ssac2.kafka.topic.sat-cat-map-data.name: SensorDataService.Data.SatCatMap
    ssac2.kafka.topic.sat-cat-tasking-age-cmd.name: SensorDataService.Command.SatCatTaskingAge
    ssac2.kafka.topic.sat-cat-tasking-age-data.name: SensorDataService.Data.SatCatTaskingAge
    ssac2.kafka.topic.sat-constellation-cmd.name: SatelliteDataService.Command.SatConstellation
    ssac2.kafka.topic.sat-constellation-data.name: SatelliteDataService.Data.SatConstellation
    ssac2.kafka.topic.sat-contact-cmd.name: SatelliteDataService.Command.SatContact
    ssac2.kafka.topic.sat-contact-data.name: SatelliteDataService.Data.SatContact
    ssac2.kafka.topic.sat-decay-cmd.name: SatelliteDataService.Command.SatDecay
    ssac2.kafka.topic.sat-decay-data.name: SatelliteDataService.Data.SatDecay
    ssac2.kafka.topic.sat-dimension-cmd.name: SatelliteDataService.Command.SatDimension
    ssac2.kafka.topic.sat-dimension-data.name: SatelliteDataService.Data.SatDimension
    ssac2.kafka.topic.sat-launch-cmd.name: SatelliteDataService.Command.SatLaunch
    ssac2.kafka.topic.sat-launch-data.name: SatelliteDataService.Data.SatLaunch
    ssac2.kafka.topic.sat-obs-association-control-cmd.name: SatelliteDataService.Command.SatObsAssociationControl
    ssac2.kafka.topic.sat-obs-association-control-data.name: SatelliteDataService.Data.SatObsAssociationControl
    ssac2.kafka.topic.satellite-cmd.name: SatelliteDataService.Command.Satellite
    ssac2.kafka.topic.satellite-data.name: SatelliteDataService.Data.Satellite
    ssac2.kafka.topic.satellite-exclusion-range-cmd.name: SensorDataService.Command.SatelliteExclusionRange
    ssac2.kafka.topic.satellite-exclusion-range-data.name: SensorDataService.Data.SatelliteExclusionRange
    ssac2.kafka.topic.satellite-ingest.name: Cavenet.Ingest.Satellite
    ssac2.kafka.topic.satellite-list-cmd.name: SatelliteDataService.Command.SatelliteList
    ssac2.kafka.topic.satellite-list-data.name: SatelliteDataService.Data.SatelliteList
    ssac2.kafka.topic.satellite-list-satellite-cmd.name: SatelliteDataService.Command.SatelliteListSatellite
    ssac2.kafka.topic.satellite-list-satellite-data.name: SatelliteDataService.Data.SatelliteListSatellite
    ssac2.kafka.topic.satellite-maneuver-threshold-cmd.name: SatelliteDataService.Command.SatelliteManeuverThreshold
    ssac2.kafka.topic.satellite-maneuver-threshold-data.name: SatelliteDataService.Data.SatelliteManeuverThreshold
    ssac2.kafka.topic.satellite-tasking-controls-cmd.name: SatelliteDataService.Command.SatelliteTaskingControls
    ssac2.kafka.topic.satellite-tasking-controls-data.name: SatelliteDataService.Data.SatelliteTaskingControls
    ssac2.kafka.topic.satellitecontrols-aggregate-data.name: SatelliteAggregatorService.Data.SatelliteTaskingControlsAggregate
    ssac2.kafka.topic.satellitedata-cmd.name: SatelliteDataService.Command.SatelliteData
    ssac2.kafka.topic.satellitedata-data.name: SatelliteDataService.Data.SatelliteData
    ssac2.kafka.topic.satellitewithobsassoccontrol-aggregate-data.name: SatelliteAggregatorService.Data.SatelliteWithObsAssocControlAggregate
    ssac2.kafka.topic.sen-ingest.name: Cavenet.Ingest.Sensor
    ssac2.kafka.topic.sensor-bias-adjustments-cmd.name: SensorDataService.Command.SensorBiasAdjustments
    ssac2.kafka.topic.sensor-bias-adjustments-data.name: SensorDataService.Data.SensorBiasAdjustments
    ssac2.kafka.topic.sensor-cal-tolerances-cmd.name: SensorDataService.Command.SensorCalTolerances
    ssac2.kafka.topic.sensor-cal-tolerances-data.name: SensorDataService.Data.SensorCalTolerances
    ssac2.kafka.topic.sensor-calibration-aggregate-data.name: SensorAggregatorService.Data.SensorCalibrationAggregate
    ssac2.kafka.topic.sensor-calibration-cmd.name: SensorDataService.Command.SensorCalibration
    ssac2.kafka.topic.sensor-calibration-data.name: SensorDataService.Data.SensorCalibration
    ssac2.kafka.topic.sensor-cmd.name: SensorDataService.Command.Sensor
    ssac2.kafka.topic.sensor-controls-aggregate-data.name: SensorAggregatorService.Data.SensorControlsAggregate
    ssac2.kafka.topic.sensor-controls-cmd.name: SensorDataService.Command.SensorControls
    ssac2.kafka.topic.sensor-controls-data.name: SensorDataService.Data.SensorControls
    ssac2.kafka.topic.sensor-data.name: SensorDataService.Data.Sensor
    ssac2.kafka.topic.sensor-detection-data-cmd.name: SensorDataService.Command.SensorDetectionData
    ssac2.kafka.topic.sensor-detection-data-data.name: SensorDataService.Data.SensorDetectionData
    ssac2.kafka.topic.sensor-detection-model-cmd.name: SensorDataService.Command.SensorDetectionModel
    ssac2.kafka.topic.sensor-detection-model-data.name: SensorDataService.Data.SensorDetectionModel
    ssac2.kafka.topic.sensor-group-cmd.name: SensorDataService.Command.SensorGroup
    ssac2.kafka.topic.sensor-group-data.name: SensorDataService.Data.SensorGroup
    ssac2.kafka.topic.sensor-grouping-cmd.name: SensorDataService.Command.SensorGrouping
    ssac2.kafka.topic.sensor-grouping-data.name: SensorDataService.Data.SensorGrouping
    ssac2.kafka.topic.sensor-limit-cmd.name: SensorDataService.Command.SensorLimit
    ssac2.kafka.topic.sensor-limit-data.name: SensorDataService.Data.SensorLimit
    ssac2.kafka.topic.sensor-maintenance-event-cmd.name: SensorDataService.Command.SensorMaintenanceEvent
    ssac2.kafka.topic.sensor-maintenance-event-data.name: SensorDataService.Data.SensorMaintenanceEvent
    ssac2.kafka.topic.sensor-maintenance-window-cmd.name: SensorDataService.Command.SensorMaintenanceWindow
    ssac2.kafka.topic.sensor-maintenance-window-data.name: SensorDataService.Data.SensorMaintenanceWindow
    ssac2.kafka.topic.sensor-tasking-controls-cmd.name: SensorDataService.Command.SensorTaskingControls
    ssac2.kafka.topic.sensor-tasking-controls-data.name: SensorDataService.Data.SensorTaskingControls
    ssac2.kafka.topic.sensordetectionmodeldata-aggregate-data.name: SensorDataService.Data.SensorDetectionModelDataAggregate
    ssac2.kafka.topic.sensorgroupgrouping-aggregate-data.name: SensorDataService.Data.SensorGroupGroupingAggregate
    ssac2.kafka.topic.sensorlocationlimit-aggregate-data.name: SensorDataService.Data.SensorLocationLimitAggregate
    ssac2.kafka.topic.sensortaskingcontrols-aggregate-data.name: SensorDataService.Data.SensorTaskingControlsAggregate
    ssac2.kafka.topic.site-cmd.name: SensorDataService.Command.Site
    ssac2.kafka.topic.site-data.name: SensorDataService.Data.Site
    ssac2.kafka.topic.site-susceptibility-cmd.name: SensorDataService.Command.SiteSusceptibility
    ssac2.kafka.topic.site-susceptibility-data.name: SensorDataService.Data.SiteSusceptibility
    ssac2.kafka.topic.solarflux-axxx51.name: Environment.Ingest.SolarfluxAxxx51
    ssac2.kafka.topic.solarflux-cmd.name: EnvironmentDataService.Command.SolarFlux
    ssac2.kafka.topic.solarflux-data.name: EnvironmentDataService.Data.SolarFlux
    ssac2.kafka.topic.solarflux-fluxfile.name: Environment.Ingest.SolarfluxFluxfile
    ssac2.kafka.topic.solarflux-foxx54.name: Environment.Ingest.SolarfluxFoxx54
    ssac2.kafka.topic.solarflux-fxxx01.name: Environment.Ingest.SolarfluxFxxx01
    ssac2.kafka.topic.solarflux-ingest.name: Cavenet.Ingest.Solarflux
    ssac2.kafka.topic.solarflux-jbh09.name: Environment.Ingest.SolarfluxJbh09
    ssac2.kafka.topic.sp-ephemeris-cmd.name: SpephService.Command.SpEphemeris
    ssac2.kafka.topic.sp-speph-results-data.name: SpephService.Data.SpSpephResults
    ssac2.kafka.topic.spadoc-site-ingest.name: Cavenet.Ingest.Spadoc.Site
    ssac2.kafka.topic.statevector-staging-data.name: OrbitalDataService.Data.StateVectorStaging
    ssac2.kafka.topic.tasking-code-cmd.name: SensorDataService.Command.TaskingCode
    ssac2.kafka.topic.tasking-code-data.name: SensorDataService.Data.TaskingCode
    ssac2.kafka.topic.tasking-code-set-cmd.name: SensorDataService.Command.TaskingCodeSet
    ssac2.kafka.topic.tasking-code-set-data.name: SensorDataService.Data.TaskingCodeSet
    ssac2.kafka.topic.tasking-data-ingest.name: Cavenet.Ingest.TaskingData
    ssac2.kafka.topic.tasking-group-excluded-sensor-cmd.name: SensorDataService.Command.TaskingGroupExcludedSensor
    ssac2.kafka.topic.tasking-group-excluded-sensor-data.name: SensorDataService.Data.TaskingGroupExcludedSensor
    ssac2.kafka.topic.taskingcodesetcode-aggregate-data.name: SensorDataService.Data.TaskingCodeSetCodeAggregate
    ssac2.kafka.topic.timeconstants-cmd.name: EnvironmentDataService.Command.TimeConstants
    ssac2.kafka.topic.timeconstants-data.name: EnvironmentDataService.Data.TimeConstants
    ssac2.kafka.topic.timeconstants-ingest.name: Cavenet.Ingest.TimeConstants
    ssac2.kafka.topic.tle.name: Orbital.Ingest.TLE
    ssac2.kafka.topic.unassociated-metric-obs.name: ObsProcessing.Data.UnassociatedMetricObservations
    ssac2.kafka.topic.vismag-brightness-matrix-cmd.name: SatelliteDataService.Command.VismagBrightnessMatrix
    ssac2.kafka.topic.vismag-brightness-matrix-data.name: SatelliteDataService.Data.VismagBrightnessMatrix
    ssac2.kafka.topic.visual-magnitude-cmd.name: SatelliteDataService.Command.VisualMagnitude
    ssac2.kafka.topic.visual-magnitude-data.name: SatelliteDataService.Data.VisualMagnitude
    ssac2.topic.notification.event.name: NotificationManager.Event.Notification
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"cs3.kafka.topic.cs3-ingestmetricobs-history.name":"IngestMetricObs.History.Observations","cs3.kafka.topic.cs3-messages-obs.name":"CS3.Data.Observations","ndpp.kafka.topic.ndpp-messages-obs.name":"NDPP.Data.Observations","retina.kafka.topic.retina-messages-obs.name":"Retina.Data.Observations","ssac2.kafka.topic.adc-command-priority-dc-request.name":"Adc.Command.PriorityDcRequest","ssac2.kafka.topic.adc-command-routine-dc-request.name":"Adc.Command.RoutineDcRequest","ssac2.kafka.topic.adc-notification-abnormal-update.name":"ADC.Event.ASWAbnormalUpdateNotification","ssac2.kafka.topic.adc-notification-od-failure.name":"ADC.Event.ASWODFailureNotification","ssac2.kafka.topic.adc-notification-od-finish.name":"ADC.Event.ASWODFinishNotification","ssac2.kafka.topic.adc-notification-possible-maneuver.name":"ADC.Event.ASWPossibleManeuverNotification","ssac2.kafka.topic.adc-trigger-requests.name":"Adc.Command.AdcTriggerRequests","ssac2.kafka.topic.auto-edr-tasking-group-cmd.name":"SensorDataService.Command.AutoEdrTaskingGroup","ssac2.kafka.topic.auto-edr-tasking-group-data.name":"SensorDataService.Data.AutoEdrTaskingGroup","ssac2.kafka.topic.auto-maintenance-class-cmd.name":"SensorDataService.Command.AutoMaintenanceClass","ssac2.kafka.topic.auto-maintenance-class-data.name":"SensorDataService.Data.AutoMaintenanceClass","ssac2.kafka.topic.autoedrtaskinggroup-aggregate-data.name":"CrudAggregatorService.Data.AutoEdrTaskingGroupAggregate","ssac2.kafka.topic.candidate-formation-params-cmd.name":"EventDataService.Command.CandidateFormationParameters","ssac2.kafka.topic.candidate-formation-params-data.name":"EventDataService.Data.CandidateFormationParameters","ssac2.kafka.topic.candidate-formation-results.name":"CNF.Event.CandidateFormationResults","ssac2.kafka.topic.catalog-management.notification.name":"CatalogManagement.Event.CatalogManagementNotification","ssac2.kafka.topic.comment-code-cmd.name":"SatelliteDataService.Command.CommentCode","ssac2.kafka.topic.comment-code-data.name":"SatelliteDataService.Data.CommentCode","ssac2.kafka.topic.comparison-residuals-cmd.name":"OrbitalDataService.Command.ComparisonResiduals","ssac2.kafka.topic.constellation-cmd.name":"SatelliteDataService.Command.Constellation","ssac2.kafka.topic.constellation-data.name":"SatelliteDataService.Data.Constellation","ssac2.kafka.topic.contact-cmd.name":"EnvironmentDataService.Command.Contact","ssac2.kafka.topic.contact-data.name":"EnvironmentDataService.Data.Contact","ssac2.kafka.topic.controls-template-criteria-cmd.name":"SatelliteDataService.Command.ControlsTemplateCriteria","ssac2.kafka.topic.controls-template-criteria-data.name":"SatelliteDataService.Data.ControlsTemplateCriteria","ssac2.kafka.topic.country-cmd.name":"EnvironmentDataService.Command.Country","ssac2.kafka.topic.country-data.name":"EnvironmentDataService.Data.Country","ssac2.kafka.topic.create-dcsummary-cmd.name":"OrbitalDataService.Command.CreateDcSummary","ssac2.kafka.topic.create-gpelements-cmd.name":"OrbitalDataService.Command.CreateGpElements","ssac2.kafka.topic.create-radar-cross-section-cmd.name":"SatelliteDataService.Command.CreateRadarCrossSection","ssac2.kafka.topic.create-statevector-cmd.name":"OrbitalDataService.Command.CreateStateVector","ssac2.kafka.topic.current-dcsummary-updated.name":"OrbitalDataService.Event.CurrentDcSummaryUpdated","ssac2.kafka.topic.current-gpelements-updated.name":"OrbitalDataService.Event.CurrentGpElementsUpdated","ssac2.kafka.topic.current-radar-cross-section-updated.name":"SatelliteDataService.Event.CurrentRcsUpdated","ssac2.kafka.topic.current-statevector-updated.name":"OrbitalDataService.Event.CurrentStateVectorUpdated","ssac2.kafka.topic.current-vismag-cmd.name":"SatelliteDataService.Command.CurrentVismag","ssac2.kafka.topic.current-vismag-data.name":"SatelliteDataService.Data.CurrentVismag","ssac2.kafka.topic.currentegpsummary-data.name":"OrbitalDataService.Data.CurrentEgpSummary","ssac2.kafka.topic.currentstatevector-data.name":"OrbitalDataService.Data.CurrentStateVector","ssac2.kafka.topic.custom-tasking-group-cmd.name":"SensorDataService.Command.CustomTaskingGroup","ssac2.kafka.topic.custom-tasking-group-data.name":"SensorDataService.Data.CustomTaskingGroup","ssac2.kafka.topic.customtaskinggroup-aggregate-data.name":"SensorDataService.Data.CustomTaskingGroupAggregate","ssac2.kafka.topic.dc-controls-cmd.name":"SatelliteDataService.Command.DcControls","ssac2.kafka.topic.dc-controls-data.name":"SatelliteDataService.Data.DcControls","ssac2.kafka.topic.dc-ephemeris-aggregate-cmd.name":"OrbitalDataService.Command.DcEphemerisAggregate","ssac2.kafka.topic.dc-ephemeris-aggregate-data.name":"OrbitalDataService.Data.DcEphemerisAggregate","ssac2.kafka.topic.dc-tolerances-cmd.name":"SatelliteDataService.Command.DcTolerances","ssac2.kafka.topic.dc-tolerances-data.name":"SatelliteDataService.Data.DcTolerances","ssac2.kafka.topic.dcatemp-aggregate-cmd.name":"EnvironmentDataService.Command.DcaTempAggregate","ssac2.kafka.topic.dcatemp-aggregate-data.name":"EnvironmentDataService.Data.DcaTempAggregate","ssac2.kafka.topic.dcatemp-ingest.name":"Cavenet.Ingest.DcaTemp","ssac2.kafka.topic.dciteration-cmd.name":"OrbitalDataService.Command.DcIteration","ssac2.kafka.topic.dciteration-data.name":"OrbitalDataService.Data.DcIteration","ssac2.kafka.topic.dcpdefaults-cmd.name":"EnvironmentDataService.Command.DcpDefaults","ssac2.kafka.topic.dcpdefaults-data.name":"EnvironmentDataService.Data.DcpDefaults","ssac2.kafka.topic.dcpdefaults-ingest.name":"Cavenet.Ingest.DcpDefaults","ssac2.kafka.topic.decayprediction-cmd.name":"EventDataService.Command.DecayPrediction","ssac2.kafka.topic.decayprediction-data.name":"EventDataService.Data.DecayPrediction","ssac2.kafka.topic.detect-angular-rate-cmd.name":"SensorDataService.Command.DetectAngularRate","ssac2.kafka.topic.detect-angular-rate-data.name":"SensorDataService.Data.DetectAngularRate","ssac2.kafka.topic.detect-background-sky-cmd.name":"SensorDataService.Command.DetectBackgroundSky","ssac2.kafka.topic.detect-background-sky-data.name":"SensorDataService.Data.DetectBackgroundSky","ssac2.kafka.topic.dynamicconsiderparameter-cmd.name":"SatelliteDataService.Command.DynamicConsiderParameter","ssac2.kafka.topic.dynamicconsiderparameter-data.name":"SatelliteDataService.Data.DynamicConsiderParameter","ssac2.kafka.topic.earth-orientation.name":"Environment.Ingest.EarthOrientation","ssac2.kafka.topic.earthconstant-cmd.name":"EnvironmentDataService.Command.EarthConstant","ssac2.kafka.topic.earthconstant-data.name":"EnvironmentDataService.Data.EarthConstant","ssac2.kafka.topic.egpsummary-cmd.name":"OrbitalDataService.Command.EgpSummary","ssac2.kafka.topic.egpsummary-data.name":"OrbitalDataService.Data.EgpSummary","ssac2.kafka.topic.element-comparison-threshold-cmd.name":"SatelliteDataService.Command.ElementComparisonThreshold","ssac2.kafka.topic.element-comparison-threshold-data.name":"SatelliteDataService.Data.ElementComparisonThreshold","ssac2.kafka.topic.element-conversion-controls-cmd.name":"SatelliteDataService.Command.ElementConversionControls","ssac2.kafka.topic.element-conversion-controls-data.name":"SatelliteDataService.Data.ElementConversionControls","ssac2.kafka.topic.energy-dissipation-rate-bin-cmd.name":"OrbitalDataService.Command.EnergyDissipationRateBin","ssac2.kafka.topic.energy-dissipation-rate-bin-data.name":"OrbitalDataService.Data.EnergyDissipationRateBin","ssac2.kafka.topic.energy-dissipation-rate-bin-ingest.name":"Cavenet.Ingest.EnergyDissipationRateBin","ssac2.kafka.topic.ephemeris-comparison-threshold-cmd.name":"SatelliteDataService.Command.EphemerisComparisonThreshold","ssac2.kafka.topic.ephemeris-comparison-threshold-data.name":"SatelliteDataService.Data.EphemerisComparisonThreshold","ssac2.kafka.topic.ephemeris-propagate-and-compare-event.name":"ExternalEphemeris.Event.PropagateAndCompare","ssac2.kafka.topic.ephemeris-staging-aggregate-cmd.name":"OrbitalDataService.Command.EphemerisStagingAggregate","ssac2.kafka.topic.ephemeris-staging-aggregate-data.name":"OrbitalDataService.Data.EphemerisStagingAggregate","ssac2.kafka.topic.event-cmd.name":"EventDataService.Command.Event","ssac2.kafka.topic.event-data.name":"EventDataService.Data.Event","ssac2.kafka.topic.eventdata-cmd.name":"EventDataService.Command.EventData","ssac2.kafka.topic.eventdata-data.name":"EventDataService.Data.EventData","ssac2.kafka.topic.eventsat-aggregate-data.name":"EventDataService.Data.EventSatAggregate","ssac2.kafka.topic.eventsat-cmd.name":"EventDataService.Command.EventSat","ssac2.kafka.topic.eventsat-data.name":"EventDataService.Data.EventSat","ssac2.kafka.topic.external-ephemeris-aggregate-cmd.name":"OrbitalDataService.Command.ExternalEphemerisAggregate","ssac2.kafka.topic.external-ephemeris-aggregate-data.name":"OrbitalDataService.Data.ExternalEphemerisAggregate","ssac2.kafka.topic.external-gpelement-results-cmd.name":"OrbitalDataService.Command.ExternalGpElementResults","ssac2.kafka.topic.extrap-params-ingest.name":"Cavenet.Ingest.ExtrapolationParameters","ssac2.kafka.topic.extrapolation-params-cmd.name":"OrbitalDataService.Command.ExtrapolationParams","ssac2.kafka.topic.extrapolation-params-data.name":"OrbitalDataService.Data.ExtrapolationParams","ssac2.kafka.topic.forced-sensor-tasking-cmd.name":"SensorDataService.Command.ForcedSensorTasking","ssac2.kafka.topic.forced-sensor-tasking-data.name":"SensorDataService.Data.ForcedSensorTasking","ssac2.kafka.topic.geodb-cmd.name":"OrbitalDataService.Command.Geodb","ssac2.kafka.topic.geopotential-model-cmd.name":"EnvironmentDataService.Command.GeopotentialModel","ssac2.kafka.topic.geopotential-model-data.name":"EnvironmentDataService.Data.GeopotentialModel","ssac2.kafka.topic.geopotential-term-cmd.name":"EnvironmentDataService.Command.GeopotentialTerm","ssac2.kafka.topic.geopotential-term-data.name":"EnvironmentDataService.Data.GeopotentialTerm","ssac2.kafka.topic.gp-ephemeris-cmd.name":"SpephService.Command.GpEphemeris","ssac2.kafka.topic.gp-speph-results-data.name":"SpephService.Data.GpSpephResults","ssac2.kafka.topic.inp-ingest":"Cavenet.Ingest.Inp","ssac2.kafka.topic.integrator-controls-cmd.name":"SatelliteDataService.Command.IntegratorControls","ssac2.kafka.topic.integrator-controls-data.name":"SatelliteDataService.Data.IntegratorControls","ssac2.kafka.topic.iodet-one-track-elset-data.name":"Iodet.Data.OneTrackElementSets","ssac2.kafka.topic.iron-cmd.name":"SatelliteDataService.Command.Iron","ssac2.kafka.topic.iron-data.name":"SatelliteDataService.Data.Iron","ssac2.kafka.topic.location-cmd.name":"SensorDataService.Command.Location","ssac2.kafka.topic.location-data.name":"SensorDataService.Data.Location","ssac2.kafka.topic.maneuver-cmd.name":"OrbitalDataService.Command.Maneuver","ssac2.kafka.topic.maneuver-data.name":"OrbitalDataService.Data.Maneuver","ssac2.kafka.topic.maneuver-log-cmd.name":"OrbitalDataService.Command.ManeuverLog","ssac2.kafka.topic.maneuver-log-data.name":"OrbitalDataService.Data.ManeuverLog","ssac2.kafka.topic.manual-sensor-tasking-cmd.name":"SatelliteDataService.Command.ManualSensorTasking","ssac2.kafka.topic.manual-sensor-tasking-data.name":"SatelliteDataService.Data.ManualSensorTasking","ssac2.kafka.topic.manual-tasking-cmd.name":"SatelliteDataService.Command.ManualTasking","ssac2.kafka.topic.manual-tasking-data.name":"SatelliteDataService.Data.ManualTasking","ssac2.kafka.topic.manually-excluded-sensor-cmd.name":"SatelliteDataService.Command.ManuallyExcludedSensor","ssac2.kafka.topic.manually-excluded-sensor-data.name":"SatelliteDataService.Data.ManuallyExcludedSensor","ssac2.kafka.topic.mission-cmd.name":"SatelliteDataService.Command.Mission","ssac2.kafka.topic.mission-data.name":"SatelliteDataService.Data.Mission","ssac2.kafka.topic.mpe-folder-cmd.name":"EventDataService.Command.MpeFolder","ssac2.kafka.topic.mpe-folder-data.name":"EventDataService.Data.MpeFolder","ssac2.kafka.topic.mpe-processing-config-cmd.name":"EventDataService.Command.MpeProcessingConfiguration","ssac2.kafka.topic.mpe-processing-config-data.name":"EventDataService.Data.MpeProcessingConfiguration","ssac2.kafka.topic.mps-assoc-cmd.name":"AssocService.Command.MpsAssoc","ssac2.kafka.topic.obs-assoc-results-UO.name":"ObsProcessing.Data.UnassociatedObservationResults","ssac2.kafka.topic.obs-assoc-results.name":"ObsProcessing.Data.ObservationAssociationResults","ssac2.kafka.topic.obs-metrics-age-tasks.name":"age-tasks","ssac2.kafka.topic.obs-metrics-all-rate.name":"ObsProcessing.Data.ObservationMetricsAllRate","ssac2.kafka.topic.obs-metrics-assoc-history-records.name":"ObsProcessing.Data.ObservationAssociationHistoryRecords","ssac2.kafka.topic.obs-metrics-count-alert.name":"Retina.Data.TotalAlertCount","ssac2.kafka.topic.obs-metrics-count-eossa.name":"Retina.Data.TotalEossaCount","ssac2.kafka.topic.obs-metrics-count-image.name":"Retina.Data.TotalImageCount","ssac2.kafka.topic.obs-metrics-json-alert-records.name":"Retina.Data.JSONAlertRecord","ssac2.kafka.topic.obs-metrics-json-eossa-records.name":"Retina.Data.JSONEossaRecord","ssac2.kafka.topic.obs-metrics-json-image-records.name":"Retina.Data.JSONImageRecord","ssac2.kafka.topic.obs-metrics-obs-hist-count-by-seq-all.name":"ObsProcessing.Data.ObservationHistoryCountBySequenceAll","ssac2.kafka.topic.obs-metrics-obs-hist-count-by-seq-initial.name":"ObsProcessing.Data.ObservationHistoryCountBySequenceInitial","ssac2.kafka.topic.obs-metrics-obs-hist-count-by-seq.name":"ObsProcessing.Data.ObservationHistoryCountBySequence","ssac2.kafka.topic.obs-metrics-obs-time-by-sen-latest.name":"ObsProcessing.Data.ObservationTimeBySensorLatest","ssac2.kafka.topic.obs-metrics-obs-time-by-sen.name":"ObsProcessing.Data.ObservationTimeBySensor","ssac2.kafka.topic.obs-metrics-withkey-alert.name":"Retina.Data.AlertDataWithKey","ssac2.kafka.topic.obs-metrics-withkey-eossa.name":"Retina.Data.EossaDataWithKey","ssac2.kafka.topic.obs-metrics-withkey-image.name":"Retina.Data.ImageDataWithKey","ssac2.kafka.topic.obs-notification-excessive-residuals.name":"ObsProcessing.Event.ExcessiveResiduals","ssac2.kafka.topic.obs-notification-observation-association.name":"ObsProcessing.Event.ObservationAssociationNotifications","ssac2.kafka.topic.observation-retina-cmd.name":"Retina.Data.Observations","ssac2.kafka.topic.observation-retina-eossa.name":"ObservationDataService.Command.EOSSA","ssac2.kafka.topic.observation-retina-event-eossa.name":"Retina.Event.EOSSA","ssac2.kafka.topic.obsproc-aggregate-cmd.name":"ObservationDataService.Command.ObsprocAggregate","ssac2.kafka.topic.obsproc-retag-assoc-requests.name":"ObsProcessing.Command.RetagAssociationRequests","ssac2.kafka.topic.obsproc-verify-assoc-requests.name":"ObsProcessing.Command.VerifyAssociationRequests","ssac2.kafka.topic.od-ephemeris-aggregate-cmd.name":"OrbitalDataService.Command.OdEphemerisAggregate","ssac2.kafka.topic.od-ephemeris-aggregate-data.name":"OrbitalDataService.Data.OdEphemerisAggregate","ssac2.kafka.topic.optical-detectability-cmd.name":"SensorDataService.Command.OpticalDetectability","ssac2.kafka.topic.optical-detectability-data.name":"SensorDataService.Data.OpticalDetectability","ssac2.kafka.topic.orbit-definition-cmd.name":"OrbitalDataService.Command.OrbitDefinition","ssac2.kafka.topic.orbit-definition-data.name":"OrbitalDataService.Data.OrbitDefinition","ssac2.kafka.topic.orbit-definition-group-cmd.name":"OrbitalDataService.Command.OrbitDefinitionGroup","ssac2.kafka.topic.orbit-definition-group-data.name":"OrbitalDataService.Data.OrbitDefinitionGroup","ssac2.kafka.topic.orbit-maneuver-threshold-cmd.name":"OrbitalDataService.Command.OrbitManeuverThreshold","ssac2.kafka.topic.orbit-maneuver-threshold-data.name":"OrbitalDataService.Data.OrbitManeuverThreshold","ssac2.kafka.topic.owner-operator-cmd.name":"EnvironmentDataService.Command.OwnerOperator","ssac2.kafka.topic.owner-operator-data.name":"EnvironmentDataService.Data.OwnerOperator","ssac2.kafka.topic.payload-cmd.name":"SatelliteDataService.Command.Payload","ssac2.kafka.topic.payload-contact-cmd.name":"SatelliteDataService.Command.PayloadContact","ssac2.kafka.topic.payload-contact-data.name":"SatelliteDataService.Data.PayloadContact","ssac2.kafka.topic.payload-data.name":"SatelliteDataService.Data.Payload","ssac2.kafka.topic.payload-mission-cmd.name":"SatelliteDataService.Command.PayloadMission","ssac2.kafka.topic.payload-mission-data.name":"SatelliteDataService.Data.PayloadMission","ssac2.kafka.topic.payload-status-cmd.name":"SatelliteDataService.Command.PayloadStatus","ssac2.kafka.topic.payload-status-data.name":"SatelliteDataService.Data.PayloadStatus","ssac2.kafka.topic.pct-event.name":"ProphylacticCrossTag.Event.CrosstagCandidateNotifications","ssac2.kafka.topic.pem-ingest.name":"Cavenet.Ingest.PredictionErrorModel","ssac2.kafka.topic.perturbation-controls-cmd.name":"SatelliteDataService.Command.PerturbationControls","ssac2.kafka.topic.perturbation-controls-data.name":"SatelliteDataService.Data.PerturbationControls","ssac2.kafka.topic.post-maneuver-data-cmd.name":"OrbitalDataService.Command.PostManeuverData","ssac2.kafka.topic.post-maneuver-data-data.name":"OrbitalDataService.Data.PostManeuverData","ssac2.kafka.topic.prediction-controls-cmd.name":"SatelliteDataService.Command.PredictionControls","ssac2.kafka.topic.prediction-controls-data.name":"SatelliteDataService.Data.PredictionControls","ssac2.kafka.topic.prediction-error-model-cmd.name":"SatelliteDataService.Command.PredictionErrorModel","ssac2.kafka.topic.prediction-error-model-data.name":"SatelliteDataService.Data.PredictionErrorModel","ssac2.kafka.topic.process-level-control-cmd.name":"SatelliteDataService.Command.ProcessLevelControl","ssac2.kafka.topic.process-level-control-data.name":"SatelliteDataService.Data.ProcessLevelControl","ssac2.kafka.topic.rcs-matrix-cmd.name":"SatelliteDataService.Command.RcsMatrix","ssac2.kafka.topic.rcs-matrix-data.name":"SatelliteDataService.Data.RcsMatrix","ssac2.kafka.topic.retag-priority-cmd.name":"SatelliteDataService.Command.RetagPriority","ssac2.kafka.topic.retag-priority-data.name":"SatelliteDataService.Data.RetagPriority","ssac2.kafka.topic.retina-message-gen-event.name":"MessageGen.Event.UCT","ssac2.kafka.topic.routine-satellite-tasking-aggregate-cmd.name":"TaskingDataService.Command.RoutineSatelliteTaskingAggregate","ssac2.kafka.topic.routine-satellite-tasking-aggregate-data.name":"TaskingDataService.Data.RoutineSatelliteTaskingAggregate","ssac2.kafka.topic.routine-satellite-tasking-data.name":"TaskingDataService.Data.RoutineSatelliteTasking","ssac2.kafka.topic.routine-sensor-tasking-data.name":"TaskingDataService.Data.RoutineSensorTasking","ssac2.kafka.topic.routine-sensor-tasking-request-cmd.name":"SensorTasking.Command.RoutineSensorTaskingRequest","ssac2.kafka.topic.routine-sensor-tasking-response-data.name":"TaskingDataService.Data.RoutineSensorTaskingResponse","ssac2.kafka.topic.routine-sensor-tasking-run-data.name":"TaskingDataService.Data.RoutineSensorTaskingRun","ssac2.kafka.topic.routine-sensor-tasking.progress-event.name":"SensorTasking.Event.ProgressEvent","ssac2.kafka.topic.rso-reservation-cmd.name":"SatelliteDataService.Command.RsoReservation","ssac2.kafka.topic.rso-reservation-data.name":"SatelliteDataService.Data.RsoReservation","ssac2.kafka.topic.sat-capability-cmd.name":"SatelliteDataService.Command.SatCapability","ssac2.kafka.topic.sat-capability-data.name":"SatelliteDataService.Data.SatCapability","ssac2.kafka.topic.sat-cat-map-cmd.name":"SensorDataService.Command.SatCatMap","ssac2.kafka.topic.sat-cat-map-data.name":"SensorDataService.Data.SatCatMap","ssac2.kafka.topic.sat-cat-tasking-age-cmd.name":"SensorDataService.Command.SatCatTaskingAge","ssac2.kafka.topic.sat-cat-tasking-age-data.name":"SensorDataService.Data.SatCatTaskingAge","ssac2.kafka.topic.sat-constellation-cmd.name":"SatelliteDataService.Command.SatConstellation","ssac2.kafka.topic.sat-constellation-data.name":"SatelliteDataService.Data.SatConstellation","ssac2.kafka.topic.sat-contact-cmd.name":"SatelliteDataService.Command.SatContact","ssac2.kafka.topic.sat-contact-data.name":"SatelliteDataService.Data.SatContact","ssac2.kafka.topic.sat-decay-cmd.name":"SatelliteDataService.Command.SatDecay","ssac2.kafka.topic.sat-decay-data.name":"SatelliteDataService.Data.SatDecay","ssac2.kafka.topic.sat-dimension-cmd.name":"SatelliteDataService.Command.SatDimension","ssac2.kafka.topic.sat-dimension-data.name":"SatelliteDataService.Data.SatDimension","ssac2.kafka.topic.sat-launch-cmd.name":"SatelliteDataService.Command.SatLaunch","ssac2.kafka.topic.sat-launch-data.name":"SatelliteDataService.Data.SatLaunch","ssac2.kafka.topic.sat-obs-association-control-cmd.name":"SatelliteDataService.Command.SatObsAssociationControl","ssac2.kafka.topic.sat-obs-association-control-data.name":"SatelliteDataService.Data.SatObsAssociationControl","ssac2.kafka.topic.satellite-cmd.name":"SatelliteDataService.Command.Satellite","ssac2.kafka.topic.satellite-data.name":"SatelliteDataService.Data.Satellite","ssac2.kafka.topic.satellite-exclusion-range-cmd.name":"SensorDataService.Command.SatelliteExclusionRange","ssac2.kafka.topic.satellite-exclusion-range-data.name":"SensorDataService.Data.SatelliteExclusionRange","ssac2.kafka.topic.satellite-ingest.name":"Cavenet.Ingest.Satellite","ssac2.kafka.topic.satellite-list-cmd.name":"SatelliteDataService.Command.SatelliteList","ssac2.kafka.topic.satellite-list-data.name":"SatelliteDataService.Data.SatelliteList","ssac2.kafka.topic.satellite-list-satellite-cmd.name":"SatelliteDataService.Command.SatelliteListSatellite","ssac2.kafka.topic.satellite-list-satellite-data.name":"SatelliteDataService.Data.SatelliteListSatellite","ssac2.kafka.topic.satellite-maneuver-threshold-cmd.name":"SatelliteDataService.Command.SatelliteManeuverThreshold","ssac2.kafka.topic.satellite-maneuver-threshold-data.name":"SatelliteDataService.Data.SatelliteManeuverThreshold","ssac2.kafka.topic.satellite-tasking-controls-cmd.name":"SatelliteDataService.Command.SatelliteTaskingControls","ssac2.kafka.topic.satellite-tasking-controls-data.name":"SatelliteDataService.Data.SatelliteTaskingControls","ssac2.kafka.topic.satellitecontrols-aggregate-data.name":"SatelliteAggregatorService.Data.SatelliteTaskingControlsAggregate","ssac2.kafka.topic.satellitedata-cmd.name":"SatelliteDataService.Command.SatelliteData","ssac2.kafka.topic.satellitedata-data.name":"SatelliteDataService.Data.SatelliteData","ssac2.kafka.topic.satellitewithobsassoccontrol-aggregate-data.name":"SatelliteAggregatorService.Data.SatelliteWithObsAssocControlAggregate","ssac2.kafka.topic.sen-ingest.name":"Cavenet.Ingest.Sensor","ssac2.kafka.topic.sensor-bias-adjustments-cmd.name":"SensorDataService.Command.SensorBiasAdjustments","ssac2.kafka.topic.sensor-bias-adjustments-data.name":"SensorDataService.Data.SensorBiasAdjustments","ssac2.kafka.topic.sensor-cal-tolerances-cmd.name":"SensorDataService.Command.SensorCalTolerances","ssac2.kafka.topic.sensor-cal-tolerances-data.name":"SensorDataService.Data.SensorCalTolerances","ssac2.kafka.topic.sensor-calibration-aggregate-data.name":"SensorAggregatorService.Data.SensorCalibrationAggregate","ssac2.kafka.topic.sensor-calibration-cmd.name":"SensorDataService.Command.SensorCalibration","ssac2.kafka.topic.sensor-calibration-data.name":"SensorDataService.Data.SensorCalibration","ssac2.kafka.topic.sensor-cmd.name":"SensorDataService.Command.Sensor","ssac2.kafka.topic.sensor-controls-aggregate-data.name":"SensorAggregatorService.Data.SensorControlsAggregate","ssac2.kafka.topic.sensor-controls-cmd.name":"SensorDataService.Command.SensorControls","ssac2.kafka.topic.sensor-controls-data.name":"SensorDataService.Data.SensorControls","ssac2.kafka.topic.sensor-data.name":"SensorDataService.Data.Sensor","ssac2.kafka.topic.sensor-detection-data-cmd.name":"SensorDataService.Command.SensorDetectionData","ssac2.kafka.topic.sensor-detection-data-data.name":"SensorDataService.Data.SensorDetectionData","ssac2.kafka.topic.sensor-detection-model-cmd.name":"SensorDataService.Command.SensorDetectionModel","ssac2.kafka.topic.sensor-detection-model-data.name":"SensorDataService.Data.SensorDetectionModel","ssac2.kafka.topic.sensor-group-cmd.name":"SensorDataService.Command.SensorGroup","ssac2.kafka.topic.sensor-group-data.name":"SensorDataService.Data.SensorGroup","ssac2.kafka.topic.sensor-grouping-cmd.name":"SensorDataService.Command.SensorGrouping","ssac2.kafka.topic.sensor-grouping-data.name":"SensorDataService.Data.SensorGrouping","ssac2.kafka.topic.sensor-limit-cmd.name":"SensorDataService.Command.SensorLimit","ssac2.kafka.topic.sensor-limit-data.name":"SensorDataService.Data.SensorLimit","ssac2.kafka.topic.sensor-maintenance-event-cmd.name":"SensorDataService.Command.SensorMaintenanceEvent","ssac2.kafka.topic.sensor-maintenance-event-data.name":"SensorDataService.Data.SensorMaintenanceEvent","ssac2.kafka.topic.sensor-maintenance-window-cmd.name":"SensorDataService.Command.SensorMaintenanceWindow","ssac2.kafka.topic.sensor-maintenance-window-data.name":"SensorDataService.Data.SensorMaintenanceWindow","ssac2.kafka.topic.sensor-tasking-controls-cmd.name":"SensorDataService.Command.SensorTaskingControls","ssac2.kafka.topic.sensor-tasking-controls-data.name":"SensorDataService.Data.SensorTaskingControls","ssac2.kafka.topic.sensordetectionmodeldata-aggregate-data.name":"SensorDataService.Data.SensorDetectionModelDataAggregate","ssac2.kafka.topic.sensorgroupgrouping-aggregate-data.name":"SensorDataService.Data.SensorGroupGroupingAggregate","ssac2.kafka.topic.sensorlocationlimit-aggregate-data.name":"SensorDataService.Data.SensorLocationLimitAggregate","ssac2.kafka.topic.sensortaskingcontrols-aggregate-data.name":"SensorDataService.Data.SensorTaskingControlsAggregate","ssac2.kafka.topic.site-cmd.name":"SensorDataService.Command.Site","ssac2.kafka.topic.site-data.name":"SensorDataService.Data.Site","ssac2.kafka.topic.site-susceptibility-cmd.name":"SensorDataService.Command.SiteSusceptibility","ssac2.kafka.topic.site-susceptibility-data.name":"SensorDataService.Data.SiteSusceptibility","ssac2.kafka.topic.solarflux-axxx51.name":"Environment.Ingest.SolarfluxAxxx51","ssac2.kafka.topic.solarflux-cmd.name":"EnvironmentDataService.Command.SolarFlux","ssac2.kafka.topic.solarflux-data.name":"EnvironmentDataService.Data.SolarFlux","ssac2.kafka.topic.solarflux-fluxfile.name":"Environment.Ingest.SolarfluxFluxfile","ssac2.kafka.topic.solarflux-foxx54.name":"Environment.Ingest.SolarfluxFoxx54","ssac2.kafka.topic.solarflux-fxxx01.name":"Environment.Ingest.SolarfluxFxxx01","ssac2.kafka.topic.solarflux-ingest.name":"Cavenet.Ingest.Solarflux","ssac2.kafka.topic.solarflux-jbh09.name":"Environment.Ingest.SolarfluxJbh09","ssac2.kafka.topic.sp-ephemeris-cmd.name":"SpephService.Command.SpEphemeris","ssac2.kafka.topic.sp-speph-results-data.name":"SpephService.Data.SpSpephResults","ssac2.kafka.topic.spadoc-site-ingest.name":"Cavenet.Ingest.Spadoc.Site","ssac2.kafka.topic.statevector-staging-data.name":"OrbitalDataService.Data.StateVectorStaging","ssac2.kafka.topic.tasking-code-cmd.name":"SensorDataService.Command.TaskingCode","ssac2.kafka.topic.tasking-code-data.name":"SensorDataService.Data.TaskingCode","ssac2.kafka.topic.tasking-code-set-cmd.name":"SensorDataService.Command.TaskingCodeSet","ssac2.kafka.topic.tasking-code-set-data.name":"SensorDataService.Data.TaskingCodeSet","ssac2.kafka.topic.tasking-data-ingest.name":"Cavenet.Ingest.TaskingData","ssac2.kafka.topic.tasking-group-excluded-sensor-cmd.name":"SensorDataService.Command.TaskingGroupExcludedSensor","ssac2.kafka.topic.tasking-group-excluded-sensor-data.name":"SensorDataService.Data.TaskingGroupExcludedSensor","ssac2.kafka.topic.taskingcodesetcode-aggregate-data.name":"SensorDataService.Data.TaskingCodeSetCodeAggregate","ssac2.kafka.topic.timeconstants-cmd.name":"EnvironmentDataService.Command.TimeConstants","ssac2.kafka.topic.timeconstants-data.name":"EnvironmentDataService.Data.TimeConstants","ssac2.kafka.topic.timeconstants-ingest.name":"Cavenet.Ingest.TimeConstants","ssac2.kafka.topic.tle.name":"Orbital.Ingest.TLE","ssac2.kafka.topic.unassociated-metric-obs.name":"ObsProcessing.Data.UnassociatedMetricObservations","ssac2.kafka.topic.vismag-brightness-matrix-cmd.name":"SatelliteDataService.Command.VismagBrightnessMatrix","ssac2.kafka.topic.vismag-brightness-matrix-data.name":"SatelliteDataService.Data.VismagBrightnessMatrix","ssac2.kafka.topic.visual-magnitude-cmd.name":"SatelliteDataService.Command.VisualMagnitude","ssac2.kafka.topic.visual-magnitude-data.name":"SatelliteDataService.Data.VisualMagnitude","ssac2.topic.notification.event.name":"NotificationManager.Event.Notification"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"kafka-topic-config","namespace":"atlas-infrastructure"}}
    name: kafka-topic-config
    namespace: atlas-infrastructure
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"namespace-reader"},"rules":[{"apiGroups":[""],"resources":["configmaps","pods","services","endpoints","secrets"],"verbs":["get","list","watch"]}]}
    name: namespace-reader
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    - pods
    - services
    - endpoints
    - secrets
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"namespace-reader-binding"},"roleRef":{"apiGroup":"","kind":"ClusterRole","name":"namespace-reader"},"subjects":[{"apiGroup":"","kind":"ServiceAccount","name":"observation-crud-helm","namespace":"atlas-observation-crud-service"},{"apiGroup":"","kind":"ServiceAccount","name":"crud-aggregator","namespace":"atlas-observation-crud-service"}]}
    name: namespace-reader-binding
  roleRef:
    apiGroup: ""
    kind: ClusterRole
    name: namespace-reader
  subjects:
  - apiGroup: ""
    kind: ServiceAccount
    name: observation-crud-helm
    namespace: atlas-observation-crud-service
  - apiGroup: ""
    kind: ServiceAccount
    name: crud-aggregator
    namespace: atlas-observation-crud-service
kind: List
metadata: {}
---
apiVersion: v1
items:
- apiVersion: v1
  data:
    password: ZGJwYXNzd29yZA==
    postgres-password: cGFzc3dvcmQ=
  kind: Secret
  metadata:
    annotations:
      kapp.k14s.io/change-group: atlas/observation-crud-postgresql
      kapp.k14s.io/change-rule: upsert after upserting atlas/kafka-registry
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"password":"ZGJwYXNzd29yZA==","postgres-password":"cGFzc3dvcmQ="},"kind":"Secret","metadata":{"annotations":{"kapp.k14s.io/change-group":"atlas/observation-crud-postgresql","kapp.k14s.io/change-rule":"upsert after upserting atlas/kafka-registry"},"labels":{"app.kubernetes.io/instance":"observation-crud","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"postgresql","helm.sh/chart":"postgresql-11.1.22"},"name":"observation-crud-postgresql","namespace":"atlas-observation-crud-service"},"type":"Opaque"}
    labels:
      app.kubernetes.io/instance: observation-crud
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      helm.sh/chart: postgresql-11.1.22
    name: observation-crud-postgresql
    namespace: atlas-observation-crud-service
  type: Opaque
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kapp.k14s.io/change-group: atlas/observation-crud-postgresql
      kapp.k14s.io/change-rule: upsert after upserting atlas/kafka-registry
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"kapp.k14s.io/change-group":"atlas/observation-crud-postgresql","kapp.k14s.io/change-rule":"upsert after upserting atlas/kafka-registry","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"app.kubernetes.io/component":"primary","app.kubernetes.io/instance":"observation-crud","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"postgresql","helm.sh/chart":"postgresql-11.1.22"},"name":"observation-crud-postgresql-hl","namespace":"atlas-observation-crud-service"},"spec":{"clusterIP":"None","ports":[{"name":"tcp-postgresql","port":5432,"targetPort":"tcp-postgresql"}],"publishNotReadyAddresses":true,"selector":{"app.kubernetes.io/component":"primary","app.kubernetes.io/instance":"observation-crud","app.kubernetes.io/name":"postgresql"},"type":"ClusterIP"}}
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    labels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: observation-crud
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      helm.sh/chart: postgresql-11.1.22
    name: observation-crud-postgresql-hl
    namespace: atlas-observation-crud-service
  spec:
    clusterIP: None
    ports:
    - name: tcp-postgresql
      port: 5432
      targetPort: tcp-postgresql
    publishNotReadyAddresses: true
    selector:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: observation-crud
      app.kubernetes.io/name: postgresql
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kapp.k14s.io/change-group: atlas/observation-crud-postgresql
      kapp.k14s.io/change-rule: upsert after upserting atlas/kafka-registry
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"kapp.k14s.io/change-group":"atlas/observation-crud-postgresql","kapp.k14s.io/change-rule":"upsert after upserting atlas/kafka-registry"},"labels":{"app.kubernetes.io/component":"primary","app.kubernetes.io/instance":"observation-crud","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"postgresql","helm.sh/chart":"postgresql-11.1.22"},"name":"observation-crud-postgresql","namespace":"atlas-observation-crud-service"},"spec":{"ports":[{"name":"tcp-postgresql","nodePort":null,"port":5432,"targetPort":"tcp-postgresql"}],"selector":{"app.kubernetes.io/component":"primary","app.kubernetes.io/instance":"observation-crud","app.kubernetes.io/name":"postgresql"},"type":"ClusterIP"}}
    labels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: observation-crud
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      helm.sh/chart: postgresql-11.1.22
    name: observation-crud-postgresql
    namespace: atlas-observation-crud-service
  spec:
    ports:
    - name: tcp-postgresql
      nodePort: null
      port: 5432
      targetPort: tcp-postgresql
    selector:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: observation-crud
      app.kubernetes.io/name: postgresql
    type: ClusterIP
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kapp.k14s.io/change-group: atlas/observation-crud-postgresql
      kapp.k14s.io/change-rule: upsert after upserting atlas/kafka-registry
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{"kapp.k14s.io/change-group":"atlas/observation-crud-postgresql","kapp.k14s.io/change-rule":"upsert after upserting atlas/kafka-registry"},"labels":{"app.kubernetes.io/component":"primary","app.kubernetes.io/instance":"observation-crud","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"postgresql","helm.sh/chart":"postgresql-11.1.22"},"name":"observation-crud-postgresql","namespace":"atlas-observation-crud-service"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/component":"primary","app.kubernetes.io/instance":"observation-crud","app.kubernetes.io/name":"postgresql"}},"serviceName":"observation-crud-postgresql-hl","template":{"metadata":{"annotations":null,"labels":{"app.kubernetes.io/component":"primary","app.kubernetes.io/instance":"observation-crud","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"postgresql","helm.sh/chart":"postgresql-11.1.22"},"name":"observation-crud-postgresql"},"spec":{"affinity":{"nodeAffinity":null,"podAffinity":null,"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchLabels":{"app.kubernetes.io/component":"primary","app.kubernetes.io/instance":"observation-crud","app.kubernetes.io/name":"postgresql"}},"namespaces":["atlas-observation-crud-service"],"topologyKey":"kubernetes.io/hostname"},"weight":1}]}},"containers":[{"env":[{"name":"BITNAMI_DEBUG","value":"false"},{"name":"POSTGRESQL_PORT_NUMBER","value":"5432"},{"name":"POSTGRESQL_VOLUME_DIR","value":"/bitnami/postgresql"},{"name":"PGDATA","value":"/bitnami/postgresql/data"},{"name":"POSTGRES_USER","value":"dbuser"},{"name":"POSTGRES_POSTGRES_PASSWORD","valueFrom":{"secretKeyRef":{"key":"postgres-password","name":"observation-crud-postgresql"}}},{"name":"POSTGRES_PASSWORD","valueFrom":{"secretKeyRef":{"key":"password","name":"observation-crud-postgresql"}}},{"name":"POSTGRES_DB","value":"obsdb"},{"name":"POSTGRESQL_ENABLE_LDAP","value":"no"},{"name":"POSTGRESQL_ENABLE_TLS","value":"no"},{"name":"POSTGRESQL_LOG_HOSTNAME","value":"false"},{"name":"POSTGRESQL_LOG_CONNECTIONS","value":"false"},{"name":"POSTGRESQL_LOG_DISCONNECTIONS","value":"false"},{"name":"POSTGRESQL_PGAUDIT_LOG_CATALOG","value":"off"},{"name":"POSTGRESQL_CLIENT_MIN_MESSAGES","value":"error"},{"name":"POSTGRESQL_SHARED_PRELOAD_LIBRARIES","value":"pgaudit"},{"name":"PGPASSWORD","value":"dbpassword"}],"image":"docker.io/bitnami/postgresql:14.2.0-debian-10-r70","imagePullPolicy":"IfNotPresent","livenessProbe":{"exec":{"command":["/bin/sh","-c","exec pg_isready -U \"dbuser\" -d \"dbname=obsdb\" -h 127.0.0.1 -p 5432"]},"failureThreshold":6,"initialDelaySeconds":30,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":5},"name":"postgresql","ports":[{"containerPort":5432,"name":"tcp-postgresql"}],"readinessProbe":{"exec":{"command":["/bin/sh","-c","-e","exec pg_isready -U \"dbuser\" -d \"dbname=obsdb\" -h 127.0.0.1 -p 5432\n[ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]\n"]},"failureThreshold":6,"initialDelaySeconds":5,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":5},"resources":{"limits":{},"requests":{"cpu":"250m","memory":"256Mi"}},"securityContext":{"runAsUser":1001},"volumeMounts":[{"mountPath":"/dev/shm","name":"dshm"},{"mountPath":"/bitnami/postgresql","name":"data"},{"mountPath":"/docker-entrypoint-initdb.d/","name":"scripts"}]}],"hostIPC":false,"hostNetwork":false,"initContainers":null,"securityContext":{"fsGroup":1001},"serviceAccountName":"default","volumes":[{"configMap":{"name":"scripts"},"name":"scripts"},{"emptyDir":{"medium":"Memory"},"name":"dshm"}]}},"updateStrategy":{"rollingUpdate":{},"type":"RollingUpdate"},"volumeClaimTemplates":[{"metadata":{"name":"data"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"8Gi"}}}}]}}
    labels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: observation-crud
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      helm.sh/chart: postgresql-11.1.22
    name: observation-crud-postgresql
    namespace: atlas-observation-crud-service
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: primary
        app.kubernetes.io/instance: observation-crud
        app.kubernetes.io/name: postgresql
    serviceName: observation-crud-postgresql-hl
    template:
      metadata:
        annotations: null
        labels:
          app.kubernetes.io/component: primary
          app.kubernetes.io/instance: observation-crud
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: postgresql
          helm.sh/chart: postgresql-11.1.22
        name: observation-crud-postgresql
      spec:
        affinity:
          nodeAffinity: null
          podAffinity: null
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: primary
                    app.kubernetes.io/instance: observation-crud
                    app.kubernetes.io/name: postgresql
                namespaces:
                - atlas-observation-crud-service
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: POSTGRESQL_PORT_NUMBER
            value: "5432"
          - name: POSTGRESQL_VOLUME_DIR
            value: /bitnami/postgresql
          - name: PGDATA
            value: /bitnami/postgresql/data
          - name: POSTGRES_USER
            value: dbuser
          - name: POSTGRES_POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: postgres-password
                name: observation-crud-postgresql
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: observation-crud-postgresql
          - name: POSTGRES_DB
            value: obsdb
          - name: POSTGRESQL_ENABLE_LDAP
            value: "no"
          - name: POSTGRESQL_ENABLE_TLS
            value: "no"
          - name: POSTGRESQL_LOG_HOSTNAME
            value: "false"
          - name: POSTGRESQL_LOG_CONNECTIONS
            value: "false"
          - name: POSTGRESQL_LOG_DISCONNECTIONS
            value: "false"
          - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
            value: "off"
          - name: POSTGRESQL_CLIENT_MIN_MESSAGES
            value: error
          - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
            value: pgaudit
          - name: PGPASSWORD
            value: dbpassword
          image: docker.io/bitnami/postgresql:14.2.0-debian-10-r70
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - exec pg_isready -U "dbuser" -d "dbname=obsdb" -h 127.0.0.1 -p 5432
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: postgresql
          ports:
          - containerPort: 5432
            name: tcp-postgresql
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - -e
              - |
                exec pg_isready -U "dbuser" -d "dbname=obsdb" -h 127.0.0.1 -p 5432
                [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits: {}
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            runAsUser: 1001
          volumeMounts:
          - mountPath: /dev/shm
            name: dshm
          - mountPath: /bitnami/postgresql
            name: data
          - mountPath: /docker-entrypoint-initdb.d/
            name: scripts
        hostIPC: false
        hostNetwork: false
        initContainers: null
        securityContext:
          fsGroup: 1001
        serviceAccountName: default
        volumes:
        - configMap:
            name: scripts
          name: scripts
        - emptyDir:
            medium: Memory
          name: dshm
    updateStrategy:
      rollingUpdate: {}
      type: RollingUpdate
    volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
kind: List
metadata: {}
---
apiVersion: v1
items:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"observation-crud","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"helm","app.kubernetes.io/version":"1.16.0","helm.sh/chart":"helm-0.1.0"},"name":"observation-crud-helm","namespace":"atlas-observation-crud-service"}}
    labels:
      app.kubernetes.io/instance: observation-crud
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: helm
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: helm-0.1.0
    name: observation-crud-helm
    namespace: atlas-observation-crud-service
- apiVersion: v1
  data:
    SECRETS_DB_PASSWORD: ZGJwYXNzd29yZA==
    SECRETS_DB_USERNAME: ZGJ1c2Vy
  kind: Secret
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"SECRETS_DB_PASSWORD":"ZGJwYXNzd29yZA==","SECRETS_DB_USERNAME":"ZGJ1c2Vy"},"kind":"Secret","metadata":{"annotations":{},"name":"obspgclust-secrets-atlas","namespace":"atlas-observation-crud-service"}}
    name: obspgclust-secrets-atlas
    namespace: atlas-observation-crud-service
- apiVersion: v1
  data:
    DEBUG: "true"
    SCHEMA_REGISTRY_URL: http://kafka-cp-schema-registry.kafka:8081
    graphql.path: /graphql
    management.endpoint.health.group.readiness.include: readinessState,schema,listenerContainer
    management.endpoint.startup.enabled: "true"
    management.endpoints.web.exposure.include: '*'
    server.max-http-header-size: "65536"
    server.port: "8080"
    spring.cloud.config.watch.enabled: "false"
    spring.data.jpa.repositories.bootstrap-mode: lazy
    spring.datasource.url: jdbc:postgresql://observation-crud-postgresql/obsdb
    spring.main.allow-circular-references: "true"
    spring.security.oauth2.resourceserver.jwt.jwk-set-uri: https://adfs2019.km.spaceforce.mil/adfs/discovery/keys
    ssac2.kafka.messaging.crud: "true"
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"DEBUG":"true","SCHEMA_REGISTRY_URL":"http://kafka-cp-schema-registry.kafka:8081","graphql.path":"/graphql","management.endpoint.health.group.readiness.include":"readinessState,schema,listenerContainer","management.endpoint.startup.enabled":"true","management.endpoints.web.exposure.include":"*","server.max-http-header-size":"65536","server.port":"8080","spring.cloud.config.watch.enabled":"false","spring.data.jpa.repositories.bootstrap-mode":"lazy","spring.datasource.url":"jdbc:postgresql://observation-crud-postgresql/obsdb","spring.main.allow-circular-references":"true","spring.security.oauth2.resourceserver.jwt.jwk-set-uri":"https://adfs2019.km.spaceforce.mil/adfs/discovery/keys","ssac2.kafka.messaging.crud":"true"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"atlas-observation-crud-config","namespace":"atlas-observation-crud-service"}}
    name: atlas-observation-crud-config
    namespace: atlas-observation-crud-service
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"observation-crud","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"helm","app.kubernetes.io/version":"1.16.0","helm.sh/chart":"helm-0.1.0"},"name":"observation-crud-helm","namespace":"atlas-observation-crud-service"},"spec":{"ports":[{"name":"http","port":8080,"protocol":"TCP","targetPort":"http"}],"selector":{"app.kubernetes.io/instance":"observation-crud","app.kubernetes.io/name":"helm"},"type":"ClusterIP"}}
    labels:
      app.kubernetes.io/instance: observation-crud
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: helm
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: helm-0.1.0
    name: observation-crud-helm
    namespace: atlas-observation-crud-service
  spec:
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: http
    selector:
      app.kubernetes.io/instance: observation-crud
      app.kubernetes.io/name: helm
    type: ClusterIP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kapp.k14s.io/change-group: atlas/observation-crud-deployment
      kapp.k14s.io/change-rule: upsert after upserting atlas/observation-crud-postgresql
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"kapp.k14s.io/change-group":"atlas/observation-crud-deployment","kapp.k14s.io/change-rule":"upsert after upserting atlas/observation-crud-postgresql"},"labels":{"app.kubernetes.io/instance":"observation-crud","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"helm","app.kubernetes.io/version":"1.16.0","helm.sh/chart":"helm-0.1.0"},"name":"observation-crud-helm","namespace":"atlas-observation-crud-service"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/instance":"observation-crud","app.kubernetes.io/name":"helm"}},"template":{"metadata":{"labels":{"app.kubernetes.io/instance":"observation-crud","app.kubernetes.io/name":"helm"}},"spec":{"containers":[{"envFrom":[{"secretRef":{"name":"obspgclust-secrets-atlas"}}],"image":"observation-crud-app:1.0.0-SNAPSHOT","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":6,"httpGet":{"path":"/observation-crud/actuator/health/liveness","port":"http"},"periodSeconds":5},"name":"helm","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"readinessProbe":{"failureThreshold":6,"httpGet":{"path":"/observation-crud/actuator/health/readiness","port":"http"},"periodSeconds":5},"resources":{"limits":{"cpu":"5000m","memory":"3072Mi"},"requests":{"cpu":"1000m","memory":"1024Mi"}},"securityContext":{},"startupProbe":{"failureThreshold":30,"httpGet":{"path":"/observation-crud/actuator/health/liveness","port":"http"},"initialDelaySeconds":20,"periodSeconds":5}}],"securityContext":{},"serviceAccountName":"observation-crud-helm"}}}}
    labels:
      app.kubernetes.io/instance: observation-crud
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: helm
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: helm-0.1.0
    name: observation-crud-helm
    namespace: atlas-observation-crud-service
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: observation-crud
        app.kubernetes.io/name: helm
    template:
      metadata:
        labels:
          app.kubernetes.io/instance: observation-crud
          app.kubernetes.io/name: helm
      spec:
        containers:
        - envFrom:
          - secretRef:
              name: obspgclust-secrets-atlas
          image: observation-crud-app:1.0.0-SNAPSHOT
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /observation-crud/actuator/health/liveness
              port: http
            periodSeconds: 5
          name: helm
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /observation-crud/actuator/health/readiness
              port: http
            periodSeconds: 5
          resources:
            limits:
              cpu: 5000m
              memory: 3072Mi
            requests:
              cpu: 1000m
              memory: 1024Mi
          securityContext: {}
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /observation-crud/actuator/health/liveness
              port: http
            initialDelaySeconds: 20
            periodSeconds: 5
        securityContext: {}
        serviceAccountName: observation-crud-helm
- apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"networking.k8s.io/v1","kind":"Ingress","metadata":{"annotations":{"kubernetes.io/ingress.class":"nginx","kubernetes.io/tls-acme":"true"},"labels":{"app.kubernetes.io/instance":"observation-crud","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"helm","app.kubernetes.io/version":"1.16.0","helm.sh/chart":"helm-0.1.0"},"name":"observation-crud-helm","namespace":"atlas-observation-crud-service"},"spec":{"rules":[{"host":"observation-crud-service.local","http":{"paths":[{"backend":{"service":{"name":"observation-crud-helm","port":{"number":8080}}},"path":"/","pathType":"ImplementationSpecific"}]}}]}}
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
    labels:
      app.kubernetes.io/instance: observation-crud
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: helm
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: helm-0.1.0
    name: observation-crud-helm
    namespace: atlas-observation-crud-service
  spec:
    rules:
    - host: observation-crud-service.local
      http:
        paths:
        - backend:
            service:
              name: observation-crud-helm
              port:
                number: 8080
          path: /
          pathType: ImplementationSpecific
kind: List
metadata: {}
---
apiVersion: v1
items:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"crud-aggregator","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"crud-aggregator","app.kubernetes.io/version":"1.16.0","helm.sh/chart":"crud-aggregator-0.1.0"},"name":"crud-aggregator","namespace":"atlas-observation-crud-service"}}
    labels:
      app.kubernetes.io/instance: crud-aggregator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: crud-aggregator
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: crud-aggregator-0.1.0
    name: crud-aggregator
    namespace: atlas-observation-crud-service
- apiVersion: v1
  data:
    CRUD_AGGREGATOR_CLIENT_ID: Y2xpZW50aWQK
    CRUD_AGGREGATOR_CLIENT_SECRET: c2VjcmV0Cg==
  kind: Secret
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"CRUD_AGGREGATOR_CLIENT_ID":"Y2xpZW50aWQK","CRUD_AGGREGATOR_CLIENT_SECRET":"c2VjcmV0Cg=="},"kind":"Secret","metadata":{"annotations":{},"labels":{"atlas-secret":"aggregator-secrets"},"name":"aggregator-secrets","namespace":"atlas-observation-crud-service"},"type":"Opaque"}
    labels:
      atlas-secret: aggregator-secrets
    name: aggregator-secrets
    namespace: atlas-observation-crud-service
  type: Opaque
- apiVersion: v1
  data:
    spring.security.oauth2.client.provider.atlas.tokenUri: http://atlas-orbital-crud-service.atlas-orbital-crud-service.svc/orbital-crud/token
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"spring.security.oauth2.client.provider.atlas.tokenUri":"http://atlas-orbital-crud-service.atlas-orbital-crud-service.svc/orbital-crud/token"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"atlas-crud-aggregator-config","namespace":"atlas-observation-crud-service"}}
    name: atlas-crud-aggregator-config
    namespace: atlas-observation-crud-service
- apiVersion: v1
  data:
    config.yaml: |-
      files:
      - fileName: app/lib/crud-aggregator-avro-${project.version}.jar
        schemas:
          - schemaName: atlas.sensor.crud.avro.model.AutoEdrTaskingGroupAggregate
            subjects:
              - CrudAggregatorService.Command.AutoEdrTaskingGroupAggregate-value
              - CrudAggregatorService.Data.AutoEdrTaskingGroupAggregate-value
              - CrudAggregatorService.Response.AutoEdrTaskingGroupAggregate-value
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"config.yaml":"files:\n- fileName: app/lib/crud-aggregator-avro-${project.version}.jar\n  schemas:\n    - schemaName: atlas.sensor.crud.avro.model.AutoEdrTaskingGroupAggregate\n      subjects:\n        - CrudAggregatorService.Command.AutoEdrTaskingGroupAggregate-value\n        - CrudAggregatorService.Data.AutoEdrTaskingGroupAggregate-value\n        - CrudAggregatorService.Response.AutoEdrTaskingGroupAggregate-value"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"atlas-crud-aggregator-schema-config","namespace":"atlas-observation-crud-service"}}
    name: atlas-crud-aggregator-schema-config
    namespace: atlas-observation-crud-service
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"crud-aggregator","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"crud-aggregator","app.kubernetes.io/version":"1.16.0","helm.sh/chart":"crud-aggregator-0.1.0"},"name":"crud-aggregator","namespace":"atlas-observation-crud-service"},"spec":{"ports":[{"name":"http","port":80,"protocol":"TCP","targetPort":"http"}],"selector":{"app.kubernetes.io/instance":"crud-aggregator","app.kubernetes.io/name":"crud-aggregator"},"type":"ClusterIP"}}
    labels:
      app.kubernetes.io/instance: crud-aggregator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: crud-aggregator
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: crud-aggregator-0.1.0
    name: crud-aggregator
    namespace: atlas-observation-crud-service
  spec:
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    selector:
      app.kubernetes.io/instance: crud-aggregator
      app.kubernetes.io/name: crud-aggregator
    type: ClusterIP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kapp.k14s.io/change-group: atlas/crud-aggregator
      kapp.k14s.io/change-rule: upsert after upserting keycloak
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"kapp.k14s.io/change-group":"atlas/crud-aggregator","kapp.k14s.io/change-rule":"upsert after upserting keycloak"},"labels":{"app.kubernetes.io/instance":"crud-aggregator","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"crud-aggregator","app.kubernetes.io/version":"1.16.0","helm.sh/chart":"crud-aggregator-0.1.0"},"name":"crud-aggregator","namespace":"atlas-observation-crud-service"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/instance":"crud-aggregator","app.kubernetes.io/name":"crud-aggregator"}},"template":{"metadata":{"labels":{"app.kubernetes.io/instance":"crud-aggregator","app.kubernetes.io/name":"crud-aggregator"}},"spec":{"containers":[{"env":[{"name":"SCHEMA_REGISTRY_URL","value":"http://kafka-cp-schema-registry.kafka:8081"},{"name":"CRUD_AGGREGATOR_CLIENT_ID","valueFrom":{"secretKeyRef":{"key":"CRUD_AGGREGATOR_CLIENT_ID","name":"aggregator-secrets"}}},{"name":"CRUD_AGGREGATOR_CLIENT_SECRET","valueFrom":{"secretKeyRef":{"key":"CRUD_AGGREGATOR_CLIENT_SECRET","name":"aggregator-secrets"}}}],"image":"crud-aggregator-app:1.0.0-SNAPSHOT","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":6,"httpGet":{"path":"/crud-aggregator/actuator/health/liveness","port":"http"},"periodSeconds":5},"name":"crud-aggregator","ports":[{"containerPort":8080,"name":"http","protocol":"TCP"}],"readinessProbe":{"failureThreshold":6,"httpGet":{"path":"/crud-aggregator/actuator/health/readiness","port":"http"},"periodSeconds":5},"resources":{},"securityContext":{},"startupProbe":{"failureThreshold":30,"httpGet":{"path":"/crud-aggregator/actuator/health/liveness","port":"http"},"initialDelaySeconds":20,"periodSeconds":5},"volumeMounts":[{"mountPath":"/opt/atlas","name":"schema-config"}]}],"securityContext":{},"serviceAccountName":"crud-aggregator","volumes":[{"configMap":{"name":"atlas-crud-aggregator-schema-config"},"name":"schema-config"}]}}}}
    labels:
      app.kubernetes.io/instance: crud-aggregator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: crud-aggregator
      app.kubernetes.io/version: 1.16.0
      helm.sh/chart: crud-aggregator-0.1.0
    name: crud-aggregator
    namespace: atlas-observation-crud-service
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: crud-aggregator
        app.kubernetes.io/name: crud-aggregator
    template:
      metadata:
        labels:
          app.kubernetes.io/instance: crud-aggregator
          app.kubernetes.io/name: crud-aggregator
      spec:
        containers:
        - env:
          - name: SCHEMA_REGISTRY_URL
            value: http://kafka-cp-schema-registry.kafka:8081
          - name: CRUD_AGGREGATOR_CLIENT_ID
            valueFrom:
              secretKeyRef:
                key: CRUD_AGGREGATOR_CLIENT_ID
                name: aggregator-secrets
          - name: CRUD_AGGREGATOR_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                key: CRUD_AGGREGATOR_CLIENT_SECRET
                name: aggregator-secrets
          image: crud-aggregator-app:1.0.0-SNAPSHOT
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /crud-aggregator/actuator/health/liveness
              port: http
            periodSeconds: 5
          name: crud-aggregator
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /crud-aggregator/actuator/health/readiness
              port: http
            periodSeconds: 5
          resources: {}
          securityContext: {}
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /crud-aggregator/actuator/health/liveness
              port: http
            initialDelaySeconds: 20
            periodSeconds: 5
          volumeMounts:
          - mountPath: /opt/atlas
            name: schema-config
        securityContext: {}
        serviceAccountName: crud-aggregator
        volumes:
        - configMap:
            name: atlas-crud-aggregator-schema-config
          name: schema-config
kind: List
metadata: {}
---
