apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "crud-aggregator.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "crud-aggregator.labels" . | nindent 4 }}
  annotations:
    kapp.k14s.io/change-group: "atlas/crud-aggregator"
    kapp.k14s.io/change-rule: "upsert after upserting keycloak"
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "crud-aggregator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "crud-aggregator.selectorLabels" . | nindent 8 }}
    spec:
      volumes: 
        - name: schema-config
          configMap:
            name: atlas-crud-aggregator-schema-config
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "crud-aggregator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SCHEMA_REGISTRY_URL
              value: "http://kafka-cp-schema-registry.kafka:8081"
            - name: CRUD_AGGREGATOR_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: "aggregator-secrets"
                  key: CRUD_AGGREGATOR_CLIENT_ID
            - name: CRUD_AGGREGATOR_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "aggregator-secrets"
                  key: CRUD_AGGREGATOR_CLIENT_SECRET
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          startupProbe:
            httpGet:
              path: /crud-aggregator/actuator/health/liveness
              port: http
            periodSeconds: 5
            initialDelaySeconds: 20
            failureThreshold: 30
          livenessProbe:
            httpGet:
              path: /crud-aggregator/actuator/health/liveness
              port: http
            periodSeconds: 5
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /crud-aggregator/actuator/health/readiness
              port: http
            periodSeconds: 5
            failureThreshold: 6
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: schema-config
              mountPath: /opt/atlas
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
